""" closest_pair_functions_tests.py """
import poc_simpletest, urllib2, math
import closest_pair_functions as cpf
import Cluster as alg_cluster

# Constants
DIRECTORY = "http://commondatastorage.googleapis.com/codeskulptor-assets/"
MAP_URL = DIRECTORY + "data_clustering/USA_Counties.png"
DATA_3108_URL = DIRECTORY + "data_clustering/unifiedCancerData_3108.csv"


######################################################################
# Load data
def load_data():
    """
    Load cancer risk data from .csv file
    """    
    data_file = urllib2.urlopen(DATA_3108_URL)
    data = data_file.read()
    data_lines = data.split('\n')
    print "Loaded", len(data_lines), "data points"
    data_tokens = [line.split(',') for line in data_lines]
    return [[tokens[0], float(tokens[1]), float(tokens[2]), int(tokens[3]), float(tokens[4])] for tokens in data_tokens]


######################################################################
# TESTING Code

def distance(cluster1, cluster2):
    """
    Compute the Euclidean distance between two clusters
    """
    print "cluster1:", cluster1
    vert_dist = cluster1.vert_center() - cluster2.vert_center()
    horiz_dist = cluster1.horiz_center() - cluster2.horiz_center()
    return math.sqrt(vert_dist ** 2 + horiz_dist ** 2)


def run_suite():
    """
    Testing code for closest_pair_functions.py
    """
    TEST_CASE1 = [alg_cluster.Cluster(set(['00']), 0.0, 0.0, 1, 0.1), 
			  	  alg_cluster.Cluster(set(['10']), 1.0, 0.0, 2, 0.1), 
			      alg_cluster.Cluster(set(['11']), 2.0, 1.0, 3, 0.1), 
 			      alg_cluster.Cluster(set(['01']), 3.0, 5.0, 4, 0.1), 
			      alg_cluster.Cluster(set(['1010']), 10.0, 10.0, 5, 0.1), 
			      alg_cluster.Cluster(set(['1011']), 10.0, 15.0, 6, 0.1), 
			      alg_cluster.Cluster(set(['1111']), 11.0, 16.0, 7, 0.1), 
			      alg_cluster.Cluster(set(['1110']), 11.0, 22.0, 8, 0.1)]
    
    # create a TestSuite object
    suite = poc_simpletest.TestSuite()
    
    # test format_function on various inputs.  Example:
    # suite.run_test(format_function(0), "0:00.0", "Test #1:")
    cluster_list = []
    # print
    # print "Setting up cluster list ...\n"
    # print
    # DATA_TABLE = load_data()
    # print "Creating Cluster objects...\n"

    # for item in DATA_TABLE:
    # 	cluster_list.append(alg_cluster.Cluster(item[0], item[1], item[2], item[3], item[4]))
   

   
    ##########################################
    # Test:  slow_closest_pair (6 Tests)
    # test_num = 0
    # indices = [[0,3],[3,6],[6,10],[10,20],[20,27],[27,35]]
    # expected_results = [[0,1],[3,4],[8,9],[18,19],[21,22],[31,32]]
    
    # offset = indices[test_num][0]

    # print "Testing slow_closest_pair ...\n"

    # for index_range in indices:
    # 	start = index_range[0]
    # 	end = index_range[1]
    # 	print "\n\n\n\ntest_num:", test_num, "\n"
    # 	offset = indices[test_num][0]

    # 	print "\n //////////////////// Test %s ///////////////////////////\n" % (test_num+1)
    # 	# print "cluster_list[%r:%r]: %r\n" % (start, end, cluster_list[start:end])

    # 	# for index1 in range(start, end):
    # 		# for index2 in range(start + 1, end):
    # 			# if index1 != index2:
    # 				# print "\n\nindex1: %r   index2: %r \ndistance(cluster_list[index1], cluster_list[index2]): %r" % (index1, index2, distance(cluster_list[index1], cluster_list[index2]))
    # 	# print "\nslow_closest_pair(cluster_list[start:end]):", 
    # 	suite.run_test(cpf.slow_closest_pair(cluster_list[start:end]), [distance(cluster_list[expected_results[test_num][0]], cluster_list[expected_results[test_num][1]]), expected_results[test_num][0]-offset, expected_results[test_num][1]-offset], "\n\nTest #"+str(test_num)+":")
    # 	test_num += 1
    # print "######################################################################################\n\n\n\n"

    

    #########################################
    # Test:  closest_pair_strip
  #   test_num = 0
  #   # indices = [[0,3],[3,6],[6,10],[10,20],[20,27],[27,35]]
  #   indices = [[0,4]]
  #   # expected_results = [[0,1],[3,4],[8,9],[18,19],[21,22],[31,32]]
  #   expected_results = [[-99,-99]]
  #   offset = indices[test_num][0]

  #   print "Testing closest_pair_strip ...\n"

  #   for index_range in indices:
  #   	start = index_range[0]
  #   	end = index_range[1]
  #   	# print "\n\n\n\ntest_num:", test_num, "\n"
  #   	offset = indices[test_num][0]
  #   	len_cluster = abs(indices[0][0]-indices[0][-1])-1
  #   	middle_index = int(math.floor(len_cluster/2))
  #   	print "middle_index:", middle_index

  #   	print "\n //////////////////// Test %s ///////////////////////////\n" % (test_num+1)
  #   	# print "cluster_list[%r:%r]: %r\n" % (start, end, cluster_list[start:end])

  #   	for index1 in range(start, end):
  #   		for index2 in range(start + 1, end):
  #   			if index1 != index2:
  #   				print "\n\nindex1: %r   index2: %r \ndistance(cluster_list[index1], cluster_list[index2]): %r" % (index1, index2, distance(cluster_list[index1], cluster_list[index2]))
    	
		# mid = 0.5*(cluster_list[middle_index-1].horiz_center()+cluster_list[middle_index].horiz_center())
  #   	# print "\nmid (i.e., horiz_center):", mid
    	
  #   	half_width = abs(cluster_list[-1].horiz_center()-cluster_list[0].horiz_center())
  #   	print "\n\ncpf.closest_pair_strip(cluster_list[start:end],mid,half_width):", suite.run_test(cpf.closest_pair_strip(cluster_list[start:end],mid,half_width), [expected_results[test_num][0]-offset, expected_results[test_num][1]-offset], "\n\nTest #"+str(test_num+1)+":")
  #   	test_num += 1
  #   print "######################################################################################\n\n\n\n"



    #############################################
	# Test:  fast_closest_pair
    
    # test_num = 0
    # # indices = [[0,3],[3,6],[6,10],[10,20],[20,27],[27,35]]
    # # indices = [[6,10],[10,20],[27,35]]
    # indices = [[6,10]]
    # # expected_results = [[0,1],[3,4],[8,9],[18,19],[21,22],[31,32]]
    # # expected_results = [[8,9],[18,19],[31,32]]
    # expected_results = [[8,9]]

    # offset = indices[test_num][0]

    # print "Testing fast_closest_pair ..."

    # for index_range in indices:
    # 	start = index_range[0]
    # 	end = index_range[1]
    # 	offset = indices[test_num][0]

    # 	print "\n\n\n\n //////////////////// Test %s ///////////////////////////\n" % (test_num+1)
    # 	##########################################
    # 	# Uncomment to print detailed information
    # 	# print "cluster_list[%r:%r]: %r\n" % (start, end, cluster_list[start:end])

    # 	for index1 in range(start, end):
    # 		for index2 in range(start + 1, end):
    # 			if index1 != index2:
    # 				print "\n\nindex1: %r   index2: %r \ndistance(cluster_list[index1], cluster_list[index2]): %r" % (index1, index2, distance(cluster_list[index1], cluster_list[index2]))
    # 	print "\nslow_closest_pair(cluster_list[start:end]):", 
    # 	suite.run_test(cpf.fast_closest_pair(cluster_list[start:end]), [distance(cluster_list[expected_results[test_num][0]], cluster_list[expected_results[test_num][1]]), expected_results[test_num][0]-offset, expected_results[test_num][1]-offset], "\n\nTest #"+str(test_num+1)+":")
    # 	test_num += 1
    
 #    print "\n\n####################################################################"
 #    print "\nTesting closest_pair_strip OWLTest Pretest ...\n"
 #    print "\n\n####################################################################"
 #    print "\n\n\n\n##################################################"
 #    print "\n\t\t---- Test #1 ----"
 #    print "\n\n\n##################################################\n"
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0, 1, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 2, 4, 1, 0), alg_cluster.Cluster(set([]), 2, 3, 1, 0)], 1.5, 1.0), (1.0, 2, 3), "\n\nOwlTest Test #1:  closest_pair_strip\n\n")


 #    print "\n\n"
 #    print "\n\n\n\n#############################################"
 #    print "\n\t\t---- Test #2 ----"
 #    print "\n\n\n##################################################\n"
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0, 1, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 2, 4, 1, 0), alg_cluster.Cluster(set([]), 1, 3, 1, 0)], 1.5, 1.0), (1.4142135623730951, 2, 3), "\n\nOwlTest Test #2:  closest_pair_strip\n\n")


 #    print "\n\n"
 #    print "\n\n\n\n#############################################"
 #    print "\n\t\t---- Test #3 ----"
 #    print "\n\n\n##################################################\n"
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0, 1, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 1, 2, 1, 0), alg_cluster.Cluster(set([]), 3, 1, 1, 0)], 1.0, 1.0), (1.4142135623730951, 0, 1), "\n\nOwlTest Test #3:  closest_pair_strip\n\n")


 #    print "\n\n"
 #    print "\n\n\n\n#############################################"
 #    print "\n\t\t---- Test #4 ----"
 #    print "\n\n\n##################################################\n"
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0, 1, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 2, 2, 1, 0), alg_cluster.Cluster(set([]), 1, 2, 1, 0)], 1.5, 0.6), (1.0, 2, 3), "\n\nOwlTest Test #4:  closest_pair_strip\n\n")


 #    print "\n\n"
 #    print "\n\n\n\n#############################################"
 #    print "\n\t\t---- Test #5 ----"
 #    print "\n\n\n##################################################\n"
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0, 1, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 2, 1.8, 1, 0), alg_cluster.Cluster(set([]), 2, 2, 1, 0), alg_cluster.Cluster(set([]), 1, 2, 1, 0)], 2.0, 1.0), (0.19999999999999996, 2, 3), "\n\nOwlTest Test #5:  closest_pair_strip\n\n")



 #    # # #########################################
 #    # # OWLTest
 #    print "\n\n##########################################################"
 #    print "\t\tTest #6"
 #    print "\n\n\n##################################################\n"
 #    # [-10.0 pts] slow_closest_pair([alg_cluster.Cluster(set([]), 0, 0, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0)]) expected one of the tuples in set([(1.0, 0, 1)]) but received "(Exception: Returned Type Mismatch) Expected type 'tuple' but returned type 'list'."
 #    suite.run_test(cpf.slow_closest_pair([alg_cluster.Cluster(set([]), 0, 0, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0)]), (1.0, 0, 1), "\n\nOwlTest Test #6: slow_closest_pair\n\n")

 #    print "\n\n"
 #    print "\n\n##########################################################"
 #    print "Test #7"
 #    print "\n\n\n##################################################\n"
 #    # [-10.0 pts] closest_pair_strip([alg_cluster.Cluster(set([]), 0, 0, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 2, 0, 1, 0), alg_cluster.Cluster(set([]), 3, 0, 1, 0)], 1.5, 1.0) expected one of the tuples in set([(1.0, 1, 2)]) but received (99999.899999999994, -1, -1)
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0, 0, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 2, 0, 1, 0), alg_cluster.Cluster(set([]), 3, 0, 1, 0)], 1.5, 1.0), (1.0, 1, 2), "\n\nOwlTest Test #7:  closest_pair_strip\n\n")

 #    print "\n\n\n\n\n\n\n\n##########################################################"
 #    print "\t\tTest #8"
 #    print "\n\n\n##################################################\n"
 #    # [-7.0 pts] closest_pair_strip([alg_cluster.Cluster(set([]), 0.1, 0.42, 1, 0), alg_cluster.Cluster(set([]), 0.21, 0.51, 1, 0), alg_cluster.Cluster(set([]), 0.33, 0.39, 1, 0), alg_cluster.Cluster(set([]), 0.7, 0.24, 1, 0)], 0.27000000000000002, 0.142127) expected one of the tuples in set([(0.16970562748477142, 1, 2)]) but received (0.16970562748477142, 1, 3)
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0.1, 0.42, 1, 0), alg_cluster.Cluster(set([]), 0.21, 0.51, 1, 0), alg_cluster.Cluster(set([]), 0.33, 0.39, 1, 0), alg_cluster.Cluster(set([]), 0.7, 0.24, 1, 0)], 0.27000000000000002, 0.142127), (0.16970562748477142, 1, 2), "\n\nOwlTest Test #8:  closest_pair_strip\n\n")


 #    print "\n\n\n\n\n\n\n\n##########################################################"
 #    print "\t\tTest #9"
 #    print "\n\n\n##################################################\n"
 #    # [-5.5 pts] closest_pair_strip([alg_cluster.Cluster(set([]), 0.11, 0.75, 1, 0), alg_cluster.Cluster(set([]), 0.62, 0.86, 1, 0), alg_cluster.Cluster(set([]), 0.65, 0.68, 1, 0), alg_cluster.Cluster(set([]), 0.68, 0.48, 1, 0), alg_cluster.Cluster(set([]), 0.7, 0.9, 1, 0), alg_cluster.Cluster(set([]), 0.79, 0.18, 1, 0)], 0.66500000000000004, 0.182482875909) expected one of the tuples in set([(0.089442719099999998, 1, 4)]) but received (0.18248287590894655, 1, 2)
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0.11, 0.75, 1, 0), alg_cluster.Cluster(set([]), 0.62, 0.86, 1, 0), alg_cluster.Cluster(set([]), 0.65, 0.68, 1, 0), alg_cluster.Cluster(set([]), 0.68, 0.48, 1, 0), alg_cluster.Cluster(set([]), 0.7, 0.9, 1, 0), alg_cluster.Cluster(set([]), 0.79, 0.18, 1, 0)], 0.66500000000000004, 0.182482875909), (0.08944271909999157, 1, 4), "\n\nOwlTest Test #9:  closest_pair_strip\n\n")


 #    print "\n\n\n\n\n\n\n\n##########################################################"
 #    print "\t\tTest #10"
 #    print "\n\n\n##################################################\n"
 #    # [-5.0 pts] closest_pair_strip([alg_cluster.Cluster(set([]), 0.32, 0.16, 1, 0), alg_cluster.Cluster(set([]), 0.39, 0.4, 1, 0), alg_cluster.Cluster(set([]), 0.54, 0.8, 1, 0), alg_cluster.Cluster(set([]), 0.61, 0.8, 1, 0), alg_cluster.Cluster(set([]), 0.76, 0.94, 1, 0)], 0.46500000000000002, 0.070000000000000007) expected one of the tuples in set([(inf, -1, -1)]) but received (99999.899999999994, -1, -1)
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0.11, 0.75, 1, 0), alg_cluster.Cluster(set([]), 0.62, 0.86, 1, 0), alg_cluster.Cluster(set([]), 0.65, 0.68, 1, 0), alg_cluster.Cluster(set([]), 0.68, 0.48, 1, 0), alg_cluster.Cluster(set([]), 0.7, 0.9, 1, 0), alg_cluster.Cluster(set([]), 0.79, 0.18, 1, 0)], 0.46500000000000002, 0.070000000000000007), (float('inf'), -1, -1), "\n\nOwlTest Test #10:  closest_pair_strip\n\n")


 #    print "\n\n\n\n\n\n\n\n##########################################################"
 #    print "\t\tTest #11"
 #    print "\n\n\n##################################################\n"
	# # [-5.0 pts] closest_pair_strip([alg_cluster.Cluster(set([]), 0.32, 0.16, 1, 0), alg_cluster.Cluster(set([]), 0.39, 0.4, 1, 0), alg_cluster.Cluster(set([]), 0.54, 0.8, 1, 0), alg_cluster.Cluster(set([]), 0.61, 0.8, 1, 0), alg_cluster.Cluster(set([]), 0.76, 0.94, 1, 0)], 0.46500000000000002, 0.070000000000000007) expected one of the tuples in set([(inf, -1, -1)]) but received (99999.899999999994, -1, -1)
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), 0.32, 0.16, 1, 0), alg_cluster.Cluster(set([]), 0.39, 0.4, 1, 0), alg_cluster.Cluster(set([]), 0.54, 0.8, 1, 0), alg_cluster.Cluster(set([]), 0.61, 0.8, 1, 0), alg_cluster.Cluster(set([]), 0.76, 0.94, 1, 0)], 0.46500000000000002, 0.070000000000000007), (float('inf'), -1, -1), "\n\nOwlTest Test #11:  closest_pair_strip\n\n")


 #    print "\n\n\n\n\n\n\n\n##########################################################"
 #    print "\t\tTest #12"
 #    print "\n\n\n##################################################\n"
 #    # [-1.5 pts] closest_pair_strip([alg_cluster.Cluster(set([]), -1.0, 0.0, 1, 0), alg_cluster.Cluster(set([]), -0.99, -10.0, 1, 0), alg_cluster.Cluster(set([]), -0.98, -20.0, 1, 0), alg_cluster.Cluster(set([]), 0.98, 20.0, 1, 0), alg_cluster.Cluster(set([]), 0.99, 10.0, 1, 0), alg_cluster.Cluster(set([]), 1.0, 0.0, 1, 0)], 0.0, 10.000005) expected one of the tuples in set([(2.0, 0, 5)]) but received (10.000004999998751, 0, 1)
 #    suite.run_test(cpf.closest_pair_strip([alg_cluster.Cluster(set([]), -1.0, 0.0, 1, 0), alg_cluster.Cluster(set([]), -0.99, -10.0, 1, 0), alg_cluster.Cluster(set([]), -0.98, -20.0, 1, 0), alg_cluster.Cluster(set([]), 0.98, 20.0, 1, 0), alg_cluster.Cluster(set([]), 0.99, 10.0, 1, 0), alg_cluster.Cluster(set([]), 1.0, 0.0, 1, 0)], 0.0, 10.000005), (2.0, 0, 5), "\n\nOwlTest Test #12:  closest_pair_strip\n\n")



 #    print "\n\n####################################################################"
 #    print "\nTesting fast_closest_pair OWLTest ...\n"
 #    print "\n\n####################################################################"
 #    print "\t\tTest #13"
 #    print "\n\n\n##################################################\n"
 #    # [-6.0 pts] fast_closest_pair([alg_cluster.Cluster(set([]), 0, 0, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0)]) expected one of the tuples in set([(1.0, 0, 1)]) but received (Exception: TypeError) "object of type 'NoneType' has no len()" at line 137, in fast_closest_pair
 #    suite.run_test(cpf.fast_closest_pair([alg_cluster.Cluster(set([]), 0.0, 0.0, 1, 0), alg_cluster.Cluster(set([]), 1.0, 0.0, 1, 0)]), (1.0, 0, 1), "\n\nOwlTest Test #13:  fast_closest_pair\n\n")


 #    print "\n\n\n\n\n\n\n\n#########################################################"
 #    print "\t\tTest #14"
 #    print "\n\n\n##################################################\n"
 #    # [-4.9 pts] fast_closest_pair([alg_cluster.Cluster(set([]), 0, 0, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 2, 0, 1, 0), alg_cluster.Cluster(set([]), 3, 0, 1, 0)]) expected one of the tuples in set([(1.0, 1, 2), (1.0, 0, 1), (1.0, 2, 3)]) but received (Exception: TypeError) "unsupported operand type(s) for -: 'instance' and 'instance'" at line 153, in fast_closest_pair
 #    suite.run_test(cpf.fast_closest_pair([alg_cluster.Cluster(set([]), 0, 0, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 2, 0, 1, 0), alg_cluster.Cluster(set([]), 3, 0, 1, 0)]), (1.0, 0, 1), "\n\nOwlTest Test #14:  fast_closest_pair\n\n")


 #    print "\n\n\n\n\n\n\n\n#########################################################"
 #    print "\t\tTest #15"
 #    print "\n\n\n##################################################\n"
 #    # Forum explanation data (https://www.coursera.org/learn/algorithmic-thinking-2/discussions/all/threads/qZyCitkxEeaWQQ6gG0GoTg)
 #    print "cluster_list:", "[alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 4, 0, 1, 0), alg_cluster.Cluster(set([]), 5, 0, 1, 0), alg_cluster.Cluster(set([]), 7, 0, 1, 0)])"
 #    suite.run_test(cpf.fast_closest_pair([alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 5, 0, 1, 0), alg_cluster.Cluster(set([]), 4, 0, 1, 0), alg_cluster.Cluster(set([]), 7, 0, 1, 0)]), (1.0, 1, 2), "\n\nOwlTest Test #15:  fast_closest_pair\n\n")


 #    # NOTE:  previous test passes but this fails, what's the difference and why is it failing?
 #    print "\n\n\n\n\n\n\n\n#########################################################"
 #    print "\t\tTest #16"
 #    print "\n\n\n##################################################\n"
 #    # [-3.8 pts] fast_closest_pair([alg_cluster.Cluster(set([]), 1.0, 1.0, 1, 0), alg_cluster.Cluster(set([]), 1.0, 5.0, 1, 0), alg_cluster.Cluster(set([]), 1.0, 4.0, 1, 0), alg_cluster.Cluster(set([]), 1.0, 7.0, 1, 0)]) expected one of the tuples in set([(1.0, 1, 2)]) but received (3.0, 2, 3)
 #    print "cluster_list:", "[alg_cluster.Cluster(set([]), 1, 1, 1, 0), alg_cluster.Cluster(set([]), 1, 5, 1, 0), alg_cluster.Cluster(set([]), 1, 4, 1, 0), alg_cluster.Cluster(set([]), 1, 7, 1, 0)])"
 #    suite.run_test(cpf.fast_closest_pair([alg_cluster.Cluster(set([]), 1, 1, 1, 0), alg_cluster.Cluster(set([]), 1, 5, 1, 0), alg_cluster.Cluster(set([]), 1, 4, 1, 0), alg_cluster.Cluster(set([]), 1, 7, 1, 0)]), (1.0, 1, 2), "\n\nOwlTest Test #16:  fast_closest_pair\n\n")
	

 #    print "\n\n\n\n\n\n\n\n#########################################################"
 #    print "\t\tTest #17"
 #    print "\n\n\n##################################################\n"
	# # # [-6.7 pts] fast_closest_pair expected (2.2818187632915095, 97, 100) but received (2.6059070536589379, 95, 96)
 #    suite.run_test(cpf.fast_closest_pair([alg_cluster.Cluster(set(['06081']), 52.6171444847, 262.707477827, 707161, 5.6e-05), alg_cluster.Cluster(set(['06075']), 52.7404001225, 254.517429395, 776733, 8.4e-05), alg_cluster.Cluster(set(['06001']), 61.782098866, 259.312457296, 1443741, 7e-05), alg_cluster.Cluster(set(['06085']), 63.1509653633, 270.516712105, 1682585, 6.3e-05), alg_cluster.Cluster(set(['06021']), 65.2043358182, 213.245337355, 26453, 6.9e-05), alg_cluster.Cluster(set(['06113']), 68.2602083189, 236.862609218, 168660, 5.9e-05), alg_cluster.Cluster(set(['06101']), 74.2003718491, 229.646592975, 78930, 5.6e-05), alg_cluster.Cluster(set(['06067']), 74.3547338322, 245.49501455, 1223499, 6.1e-05), alg_cluster.Cluster(set(['06083']), 76.0382837186, 340.420376302, 399347, 6.4e-05), alg_cluster.Cluster(set(['06089']), 77.359494209, 188.945068958, 163256, 5.7e-05), alg_cluster.Cluster(set(['41067']), 92.2254623376, 76.2593957841, 445342, 7.3e-05), alg_cluster.Cluster(set(['06111']), 93.4973310868, 344.590570899, 753197, 5.8e-05), alg_cluster.Cluster(set(['06019']), 95.6093812211, 290.162708843, 799407, 6.4e-05), alg_cluster.Cluster(set(['06039']), 97.2145136451, 278.975077449, 123109, 6e-05), alg_cluster.Cluster(set(['41051']), 103.293707198, 79.5194104381, 660486, 9.3e-05), alg_cluster.Cluster(set(['41005']), 103.421444616, 88.318590492, 338391, 6.6e-05), alg_cluster.Cluster(set(['06029']), 103.787886113, 326.006585349, 661645, 9.7e-05), alg_cluster.Cluster(set(['53011']), 104.00046468, 74.0182527309, 345238, 6.4e-05), alg_cluster.Cluster(set(['06037']), 105.369854549, 359.050126004, 9519338, 0.00011), alg_cluster.Cluster(set(['06107']), 108.085024898, 306.351832438, 368021, 5.8e-05), alg_cluster.Cluster(set(['06059']), 113.997715586, 368.503452566, 2846289, 9.8e-05), alg_cluster.Cluster(set(['53033']), 125.27486023, 39.1497730391, 1737034, 5.8e-05), alg_cluster.Cluster(set(['06073']), 129.2075529, 387.064888184, 2813833, 6.6e-05), alg_cluster.Cluster(set(['06065']), 146.410389633, 374.21707964, 1545387, 6.1e-05), alg_cluster.Cluster(set(['06071']), 148.402461892, 350.061039619, 1709434, 7.7e-05), alg_cluster.Cluster(set(['06025']), 156.397958859, 393.161127277, 142361, 5.6e-05), alg_cluster.Cluster(set(['04013']), 214.128077618, 396.893960776, 3072149, 6.8e-05), alg_cluster.Cluster(set(['08031']), 371.038986573, 266.847932979, 554636, 7.9e-05), alg_cluster.Cluster(set(['08001']), 379.950978294, 265.078784954, 363857, 6.6e-05), alg_cluster.Cluster(set(['08005']), 380.281283151, 270.268826873, 487967, 5.9e-05), alg_cluster.Cluster(set(['31109']), 516.78216337, 250.188023316, 250291, 6.1e-05), alg_cluster.Cluster(set(['31055']), 525.799353573, 238.14275337, 463585, 6.2e-05), alg_cluster.Cluster(set(['48201']), 540.54731652, 504.62993865, 3400578, 6e-05), alg_cluster.Cluster(set(['48245']), 565.746895809, 504.541799993, 252051, 5.7e-05), alg_cluster.Cluster(set(['27053']), 570.131597541, 151.403325043, 1116200, 5.8e-05), alg_cluster.Cluster(set(['22017']), 570.826412839, 442.202574191, 252161, 6.2e-05), alg_cluster.Cluster(set(['27123']), 576.516685202, 151.219277482, 511035, 5.6e-05), alg_cluster.Cluster(set(['19163']), 621.490118929, 227.666851619, 158668, 5.6e-05), alg_cluster.Cluster(set(['29189']), 629.170659449, 297.571839563, 1016315, 6e-05), alg_cluster.Cluster(set(['28027']), 631.700027283, 400.68741948, 30622, 6e-05), alg_cluster.Cluster(set(['29510']), 632.327321169, 297.184524592, 348189, 6.9e-05), alg_cluster.Cluster(set(['28049']), 638.051593606, 445.785870317, 250800, 6e-05), alg_cluster.Cluster(set(['22071']), 651.338581076, 496.465402252, 484674, 6.4e-05), alg_cluster.Cluster(set(['28159']), 663.514261498, 425.274137823, 20160, 5.9e-05), alg_cluster.Cluster(set(['55079']), 664.855000617, 192.484141264, 940164, 7.4e-05), alg_cluster.Cluster(set(['17031']), 668.978975824, 219.400257219, 5376741, 6.1e-05), alg_cluster.Cluster(set(['47037']), 700.009323976, 350.107265446, 569891, 6.1e-05), alg_cluster.Cluster(set(['01073']), 704.191210749, 411.014665198, 662047, 7.3e-05), alg_cluster.Cluster(set(['01117']), 709.193528999, 417.394467797, 143293, 5.6e-05), alg_cluster.Cluster(set(['21111']), 715.347723878, 301.167740487, 693604, 5.9e-05), alg_cluster.Cluster(set(['01101']), 720.281573781, 440.436162917, 223510, 5.7e-05), alg_cluster.Cluster(set(['01015']), 723.907941153, 403.837487318, 112249, 5.6e-05), alg_cluster.Cluster(set(['47065']), 732.643747577, 370.017730905, 307896, 6.1e-05), alg_cluster.Cluster(set(['13313']), 737.308367745, 378.040993858, 83525, 5.6e-05), alg_cluster.Cluster(set(['01113']), 740.385154867, 436.939588695, 49756, 5.6e-05), alg_cluster.Cluster(set(['26125']), 743.036942153, 192.129690868, 1194156, 5.7e-05), alg_cluster.Cluster(set(['13215']), 745.265661102, 430.987078939, 186291, 5.9e-05), alg_cluster.Cluster(set(['26163']), 746.37046732, 200.570021537, 2061162, 6.4e-05), alg_cluster.Cluster(set(['13067']), 747.238620236, 397.293799252, 607751, 6.4e-05), alg_cluster.Cluster(set(['13121']), 750.160287596, 399.907752014, 816006, 7e-05), alg_cluster.Cluster(set(['13063']), 752.853876848, 406.722877803, 236517, 6.6e-05), alg_cluster.Cluster(set(['47093']), 753.012743594, 348.235180569, 382032, 5.6e-05), alg_cluster.Cluster(set(['13089']), 754.465443436, 400.059456026, 665865, 6.8e-05), alg_cluster.Cluster(set(['13151']), 756.589546538, 407.288873768, 119341, 5.6e-05), alg_cluster.Cluster(set(['13135']), 758.038826857, 395.110327675, 588448, 6.3e-05), alg_cluster.Cluster(set(['13247']), 758.37864157, 402.49780372, 70111, 5.6e-05), alg_cluster.Cluster(set(['12073']), 762.463896365, 477.365342219, 239452, 6.1e-05), alg_cluster.Cluster(set(['21019']), 768.726553092, 290.270551648, 49752, 5.8e-05), alg_cluster.Cluster(set(['39035']), 776.351457758, 216.558042612, 1393978, 5.8e-05), alg_cluster.Cluster(set(['51520']), 784.05333332, 328.847863787, 17367, 5.6e-05), alg_cluster.Cluster(set(['13245']), 796.799727342, 404.391349655, 199775, 5.9e-05), alg_cluster.Cluster(set(['54009']), 799.221537984, 240.153315109, 25447, 7.7e-05), alg_cluster.Cluster(set(['42003']), 809.003419092, 233.899638663, 1281666, 6.1e-05), alg_cluster.Cluster(set(['37119']), 813.724315147, 356.853362811, 695454, 5.6e-05), alg_cluster.Cluster(set(['51775', '51770']), 821.539811344, 307.579291084, 119658, 6.35522990523e-05), alg_cluster.Cluster(set(['51680']), 835.264653899, 302.326633095, 65269, 5.8e-05), alg_cluster.Cluster(set(['51820']), 837.346467474, 285.851438947, 19520, 5.8e-05), alg_cluster.Cluster(set(['51840']), 845.843602685, 258.214178983, 23585, 7.1e-05), alg_cluster.Cluster(set(['51610', '51059']), 863.075130421, 262.406379235, 980126, 5.71270489713e-05), alg_cluster.Cluster(set(['24031']), 863.180208628, 255.65657011, 873341, 6.5e-05), alg_cluster.Cluster(set(['51087', '51760']), 865.974521771, 293.191364776, 460090, 7.28875654763e-05), alg_cluster.Cluster(set(['51510', '11001', '51013']), 866.960156336, 260.951000675, 889795, 7.57024573076e-05), alg_cluster.Cluster(set(['24027']), 867.127763298, 252.141340019, 247842, 6e-05), alg_cluster.Cluster(set(['51570']), 868.048530719, 299.360459202, 16897, 5.6e-05), alg_cluster.Cluster(set(['24033']), 870.786325575, 261.829970016, 801515, 6.4e-05), alg_cluster.Cluster(set(['24005']), 871.921241442, 246.932531615, 754292, 6.1e-05), alg_cluster.Cluster(set(['24510']), 872.946822486, 249.834427518, 651154, 7.4e-05), alg_cluster.Cluster(set(['42101']), 894.72914873, 227.900547575, 1517550, 5.8e-05), alg_cluster.Cluster(set(['34007']), 899.061431482, 232.054232622, 508932, 5.7e-05), alg_cluster.Cluster(set(['34031']), 904.161746346, 201.712206531, 489049, 6.3e-05), alg_cluster.Cluster(set(['34023']), 904.976453741, 215.001458637, 750162, 5.9e-05), alg_cluster.Cluster(set(['34039']), 905.587082153, 210.045085725, 522541, 7.3e-05), alg_cluster.Cluster(set(['34013']), 906.236730753, 206.977429459, 793633, 7.1e-05), alg_cluster.Cluster(set(['34003']), 907.896066895, 202.302470427, 884118, 6.9e-05), alg_cluster.Cluster(set(['36085']), 908.749199508, 211.307161341, 443728, 7e-05), alg_cluster.Cluster(set(['34017']), 909.08042421, 207.462937763, 608975, 9.1e-05), alg_cluster.Cluster(set(['36061']), 911.072622034, 205.783086757, 1537195, 0.00015), alg_cluster.Cluster(set(['36047']), 911.595580089, 208.928374072, 2465326, 9.8e-05), alg_cluster.Cluster(set(['36119']), 912.141547823, 196.592589736, 923459, 6.5e-05), alg_cluster.Cluster(set(['36005']), 912.315497328, 203.674106811, 1332650, 0.00011), alg_cluster.Cluster(set(['36081']), 913.462051588, 207.615750359, 2229379, 8.9e-05), alg_cluster.Cluster(set(['36059']), 917.384980291, 205.43647538, 1334544, 7.6e-05), alg_cluster.Cluster(set(['09003']), 925.917212741, 177.152290276, 857183, 5.7e-05), alg_cluster.Cluster(set(['36103']), 929.241649488, 199.278463003, 1419369, 6.3e-05), alg_cluster.Cluster(set(['25017']), 943.405755498, 156.504310828, 1465396, 5.6e-05), alg_cluster.Cluster(set(['25025']), 950.299079197, 158.007070966, 689807, 7e-05)]), (2.2818187632915095, 97, 100), "\n\nOwlTest Test #17:  fast_closest_pair\n\n")


    # print "\n\n\n\n\n\n\n\n#########################################################"
    # print "\t\tTest #18"
    # print "\n\n\n##################################################\n"
    # # [-6.8 pts] fast_closest_pair expected (2.2818187632915095, 262, 265) but received (2.3947679488324565, 233, 234)
    # suite.run_test(cpf.fast_closest_pair([alg_cluster.Cluster(set(['06081']), 52.6171444847, 262.707477827, 707161, 5.6e-05), alg_cluster.Cluster(set(['06075']), 52.7404001225, 254.517429395, 776733, 8.4e-05), alg_cluster.Cluster(set(['06001']), 61.782098866, 259.312457296, 1443741, 7e-05), alg_cluster.Cluster(set(['06013']), 62.7064814493, 253.075658488, 948816, 5e-05), alg_cluster.Cluster(set(['06085']), 63.1509653633, 270.516712105, 1682585, 6.3e-05), alg_cluster.Cluster(set(['06095']), 64.1452346104, 245.330036641, 394542, 4.6e-05), alg_cluster.Cluster(set(['06021']), 65.2043358182, 213.245337355, 26453, 6.9e-05), alg_cluster.Cluster(set(['06113']), 68.2602083189, 236.862609218, 168660, 5.9e-05), alg_cluster.Cluster(set(['06077']), 74.1740312349, 256.485831492, 563598, 5.2e-05), alg_cluster.Cluster(set(['06101']), 74.2003718491, 229.646592975, 78930, 5.6e-05), alg_cluster.Cluster(set(['06067']), 74.3547338322, 245.49501455, 1223499, 6.1e-05), alg_cluster.Cluster(set(['06083']), 76.0382837186, 340.420376302, 399347, 6.4e-05), alg_cluster.Cluster(set(['06089']), 77.359494209, 188.945068958, 163256, 5.7e-05), alg_cluster.Cluster(set(['06099']), 77.5948233373, 265.302047042, 446997, 5.1e-05), alg_cluster.Cluster(set(['41029']), 78.4141193387, 147.629027207, 181269, 5.1e-05), alg_cluster.Cluster(set(['06007']), 79.7767444918, 214.910128237, 203171, 4.7e-05), alg_cluster.Cluster(set(['06047']), 80.1217093401, 275.749681794, 210554, 4.7e-05), alg_cluster.Cluster(set(['06115']), 81.8982358215, 225.444950413, 60219, 4.9e-05), alg_cluster.Cluster(set(['06031']), 89.2713893096, 304.772281089, 129461, 5.1e-05), alg_cluster.Cluster(set(['06061']), 90.0298511972, 233.575536165, 248399, 5.2e-05), alg_cluster.Cluster(set(['41067']), 92.2254623376, 76.2593957841, 445342, 7.3e-05), alg_cluster.Cluster(set(['06111']), 93.4973310868, 344.590570899, 753197, 5.8e-05), alg_cluster.Cluster(set(['06019']), 95.6093812211, 290.162708843, 799407, 6.4e-05), alg_cluster.Cluster(set(['06039']), 97.2145136451, 278.975077449, 123109, 6e-05), alg_cluster.Cluster(set(['41047']), 97.399304684, 93.4988892144, 284834, 4.8e-05), alg_cluster.Cluster(set(['41051']), 103.293707198, 79.5194104381, 660486, 9.3e-05), alg_cluster.Cluster(set(['41005']), 103.421444616, 88.318590492, 338391, 6.6e-05), alg_cluster.Cluster(set(['06029']), 103.787886113, 326.006585349, 661645, 9.7e-05), alg_cluster.Cluster(set(['53011']), 104.00046468, 74.0182527309, 345238, 6.4e-05), alg_cluster.Cluster(set(['06037']), 105.369854549, 359.050126004, 9519338, 0.00011), alg_cluster.Cluster(set(['06107']), 108.085024898, 306.351832438, 368021, 5.8e-05), alg_cluster.Cluster(set(['06059']), 113.997715586, 368.503452566, 2846289, 9.8e-05), alg_cluster.Cluster(set(['53033']), 125.27486023, 39.1497730391, 1737034, 5.8e-05), alg_cluster.Cluster(set(['06073']), 129.2075529, 387.064888184, 2813833, 6.6e-05), alg_cluster.Cluster(set(['06027']), 136.048381588, 306.102582286, 17945, 5.3e-05), alg_cluster.Cluster(set(['06065']), 146.410389633, 374.21707964, 1545387, 6.1e-05), alg_cluster.Cluster(set(['06071']), 148.402461892, 350.061039619, 1709434, 7.7e-05), alg_cluster.Cluster(set(['06025']), 156.397958859, 393.161127277, 142361, 5.6e-05), alg_cluster.Cluster(set(['32003']), 178.153492162, 324.160586278, 1375765, 4.9e-05), alg_cluster.Cluster(set(['04013']), 214.128077618, 396.893960776, 3072149, 6.8e-05), alg_cluster.Cluster(set(['08059']), 364.301409054, 270.903209636, 527056, 5.5e-05), alg_cluster.Cluster(set(['08031']), 371.038986573, 266.847932979, 554636, 7.9e-05), alg_cluster.Cluster(set(['08001']), 379.950978294, 265.078784954, 363857, 6.6e-05), alg_cluster.Cluster(set(['08005']), 380.281283151, 270.268826873, 487967, 5.9e-05), alg_cluster.Cluster(set(['48003']), 398.962651077, 443.958242671, 13004, 5.3e-05), alg_cluster.Cluster(set(['48029']), 477.886663525, 514.095891984, 1392931, 5e-05), alg_cluster.Cluster(set(['48453']), 493.032076052, 493.597339677, 812280, 5.2e-05), alg_cluster.Cluster(set(['20173']), 502.059178492, 322.563937328, 452869, 5.1e-05), alg_cluster.Cluster(set(['48439']), 503.673815634, 437.477028749, 1446219, 5e-05), alg_cluster.Cluster(set(['48113']), 513.657901701, 437.682966844, 2218899, 5.4e-05), alg_cluster.Cluster(set(['31109']), 516.78216337, 250.188023316, 250291, 6.1e-05), alg_cluster.Cluster(set(['48085']), 517.70778434, 427.895646823, 491675, 4.8e-05), alg_cluster.Cluster(set(['48041']), 522.88823653, 487.351397054, 152415, 4.6e-05), alg_cluster.Cluster(set(['31055']), 525.799353573, 238.14275337, 463585, 6.2e-05), alg_cluster.Cluster(set(['31153']), 527.065884457, 242.564882077, 122595, 4.9e-05), alg_cluster.Cluster(set(['40143']), 529.254373189, 359.119882043, 563299, 5.1e-05), alg_cluster.Cluster(set(['48157']), 533.434165736, 513.008691943, 354452, 4.6e-05), alg_cluster.Cluster(set(['40121']), 534.015957707, 386.972736212, 43953, 5.2e-05), alg_cluster.Cluster(set(['48201']), 540.54731652, 504.62993865, 3400578, 6e-05), alg_cluster.Cluster(set(['48423']), 542.731029941, 446.457985602, 174706, 4.7e-05), alg_cluster.Cluster(set(['20091']), 549.942556013, 294.526691953, 451086, 5e-05), alg_cluster.Cluster(set(['20209']), 550.661615218, 289.397706643, 157882, 5.1e-05), alg_cluster.Cluster(set(['48183']), 552.333188086, 444.322743975, 111379, 5.5e-05), alg_cluster.Cluster(set(['29095']), 558.451289477, 291.559180265, 654880, 4.6e-05), alg_cluster.Cluster(set(['48203']), 560.270010669, 442.325574621, 62110, 5e-05), alg_cluster.Cluster(set(['48365']), 562.161603376, 451.397747537, 22756, 4.8e-05), alg_cluster.Cluster(set(['48245']), 565.746895809, 504.541799993, 252051, 5.7e-05), alg_cluster.Cluster(set(['27053']), 570.131597541, 151.403325043, 1116200, 5.8e-05), alg_cluster.Cluster(set(['19153']), 570.801738263, 228.668095362, 374601, 5.2e-05), alg_cluster.Cluster(set(['22017']), 570.826412839, 442.202574191, 252161, 6.2e-05), alg_cluster.Cluster(set(['48361']), 571.064681764, 498.867855628, 84966, 4.6e-05), alg_cluster.Cluster(set(['27003']), 573.942484199, 145.118314377, 298084, 4.6e-05), alg_cluster.Cluster(set(['22015']), 575.844790614, 439.774115304, 98310, 4.9e-05), alg_cluster.Cluster(set(['27123']), 576.516685202, 151.219277482, 511035, 5.6e-05), alg_cluster.Cluster(set(['19013']), 591.836020306, 209.588448378, 128012, 4.6e-05), alg_cluster.Cluster(set(['05139']), 595.14987863, 427.226433206, 45629, 5.4e-05), alg_cluster.Cluster(set(['05119']), 598.676543754, 389.524749021, 361474, 5.3e-05), alg_cluster.Cluster(set(['19057']), 612.882010424, 244.949915243, 42351, 5.1e-05), alg_cluster.Cluster(set(['19163']), 621.490118929, 227.666851619, 158668, 5.6e-05), alg_cluster.Cluster(set(['22047']), 621.964681856, 493.299089267, 33320, 4.7e-05), alg_cluster.Cluster(set(['22121']), 622.795050771, 488.85623181, 21601, 5.2e-05), alg_cluster.Cluster(set(['17161']), 623.059973539, 231.112598464, 149374, 5e-05), alg_cluster.Cluster(set(['29183']), 625.995955203, 293.938397646, 283883, 4.7e-05), alg_cluster.Cluster(set(['22033']), 627.532921181, 486.959525017, 412852, 5.3e-05), alg_cluster.Cluster(set(['29189']), 629.170659449, 297.571839563, 1016315, 6e-05), alg_cluster.Cluster(set(['28027']), 631.700027283, 400.68741948, 30622, 6e-05), alg_cluster.Cluster(set(['29510']), 632.327321169, 297.184524592, 348189, 6.9e-05), alg_cluster.Cluster(set(['28049']), 638.051593606, 445.785870317, 250800, 6e-05), alg_cluster.Cluster(set(['22095']), 639.022908787, 496.564276607, 43044, 5.1e-05), alg_cluster.Cluster(set(['55025']), 640.259029023, 193.059886956, 426526, 5.2e-05), alg_cluster.Cluster(set(['28033']), 642.267628251, 384.839249499, 107199, 4.6e-05), alg_cluster.Cluster(set(['47157']), 643.395763039, 378.031744605, 897472, 5.5e-05), alg_cluster.Cluster(set(['28089']), 644.644674143, 437.339606833, 74674, 4.6e-05), alg_cluster.Cluster(set(['17201']), 645.722085, 209.852492823, 278418, 4.8e-05), alg_cluster.Cluster(set(['22051']), 647.254240096, 504.485538044, 455466, 4.6e-05), alg_cluster.Cluster(set(['28121']), 647.272159578, 445.553667274, 115327, 4.8e-05), alg_cluster.Cluster(set(['28043']), 647.649972548, 410.394464547, 23263, 4.7e-05), alg_cluster.Cluster(set(['22071']), 651.338581076, 496.465402252, 484674, 6.4e-05), alg_cluster.Cluster(set(['55087']), 653.76289252, 160.48762926, 160971, 4.6e-05), alg_cluster.Cluster(set(['55133']), 659.073603882, 192.731818115, 360767, 4.9e-05), alg_cluster.Cluster(set(['47053']), 660.602484901, 357.318624524, 48152, 4.6e-05), alg_cluster.Cluster(set(['55009']), 661.295442891, 158.436859333, 226778, 5.2e-05), alg_cluster.Cluster(set(['28035']), 662.340841725, 469.562070989, 72604, 5e-05), alg_cluster.Cluster(set(['28159']), 663.514261498, 425.274137823, 20160, 5.9e-05), alg_cluster.Cluster(set(['55079']), 664.855000617, 192.484141264, 940164, 7.4e-05), alg_cluster.Cluster(set(['17043']), 664.97964782, 219.666485923, 904161, 5.1e-05), alg_cluster.Cluster(set(['17031']), 668.978975824, 219.400257219, 5376741, 6.1e-05), alg_cluster.Cluster(set(['28075']), 672.167227537, 440.608524349, 78161, 4.6e-05), alg_cluster.Cluster(set(['28087']), 674.418402473, 415.122758999, 61586, 4.6e-05), alg_cluster.Cluster(set(['18089']), 677.840033419, 228.268571284, 484564, 4.8e-05), alg_cluster.Cluster(set(['01033']), 684.091279484, 385.661834299, 54984, 4.6e-05), alg_cluster.Cluster(set(['01077']), 686.294590746, 380.947137668, 87966, 4.6e-05), alg_cluster.Cluster(set(['01125']), 692.900099393, 417.773844647, 164875, 5.4e-05), alg_cluster.Cluster(set(['47037']), 700.009323976, 350.107265446, 569891, 6.1e-05), alg_cluster.Cluster(set(['01103']), 702.624988295, 389.788894045, 111064, 5.3e-05), alg_cluster.Cluster(set(['18097']), 703.47637833, 264.614798668, 860454, 4.8e-05), alg_cluster.Cluster(set(['01073']), 704.191210749, 411.014665198, 662047, 7.3e-05), alg_cluster.Cluster(set(['47165']), 705.571676152, 342.569345394, 130449, 4.6e-05), alg_cluster.Cluster(set(['47149']), 707.710145119, 356.803460768, 182023, 5e-05), alg_cluster.Cluster(set(['01089']), 707.938558006, 382.483904975, 276700, 5.1e-05), alg_cluster.Cluster(set(['01117']), 709.193528999, 417.394467797, 143293, 5.6e-05), alg_cluster.Cluster(set(['01115']), 714.563978269, 406.272136377, 64742, 4.7e-05), alg_cluster.Cluster(set(['21111']), 715.347723878, 301.167740487, 693604, 5.9e-05), alg_cluster.Cluster(set(['01121']), 718.485365885, 413.521338651, 80321, 4.9e-05), alg_cluster.Cluster(set(['01055']), 719.112287909, 398.290991634, 103459, 4.9e-05), alg_cluster.Cluster(set(['01101']), 720.281573781, 440.436162917, 223510, 5.7e-05), alg_cluster.Cluster(set(['01015']), 723.907941153, 403.837487318, 112249, 5.6e-05), alg_cluster.Cluster(set(['13295']), 731.703883397, 380.217410319, 61053, 5.4e-05), alg_cluster.Cluster(set(['39017']), 731.844357783, 269.494670001, 332807, 4.9e-05), alg_cluster.Cluster(set(['47065']), 732.643747577, 370.017730905, 307896, 6.1e-05), alg_cluster.Cluster(set(['39061']), 733.263799261, 275.315430247, 845303, 5.4e-05), alg_cluster.Cluster(set(['21117']), 734.066615163, 281.167681124, 151464, 5e-05), alg_cluster.Cluster(set(['13047']), 734.388362226, 375.991769202, 53282, 5e-05), alg_cluster.Cluster(set(['13115']), 734.580792996, 390.450110664, 90565, 5.2e-05), alg_cluster.Cluster(set(['01081']), 736.280761314, 430.281309969, 115092, 5e-05), alg_cluster.Cluster(set(['13313']), 737.308367745, 378.040993858, 83525, 5.6e-05), alg_cluster.Cluster(set(['21067']), 738.000675961, 302.005037855, 260512, 4.8e-05), alg_cluster.Cluster(set(['13045']), 738.792024777, 406.300529008, 87268, 4.6e-05), alg_cluster.Cluster(set(['01113']), 740.385154867, 436.939588695, 49756, 5.6e-05), alg_cluster.Cluster(set(['13129']), 740.472181415, 384.60635928, 44104, 5e-05), alg_cluster.Cluster(set(['13285']), 741.206792819, 419.291408746, 58779, 4.7e-05), alg_cluster.Cluster(set(['13015']), 741.560012096, 390.864452051, 76019, 4.8e-05), alg_cluster.Cluster(set(['13223']), 741.778484027, 398.177004976, 81678, 4.8e-05), alg_cluster.Cluster(set(['39095']), 742.473618138, 216.811437951, 455054, 4.6e-05), alg_cluster.Cluster(set(['26125']), 743.036942153, 192.129690868, 1194156, 5.7e-05), alg_cluster.Cluster(set(['13097']), 744.596506113, 402.962208469, 92174, 5.3e-05), alg_cluster.Cluster(set(['13215']), 745.265661102, 430.987078939, 186291, 5.9e-05), alg_cluster.Cluster(set(['13077']), 745.613117606, 411.392480996, 89215, 4.7e-05), alg_cluster.Cluster(set(['26163']), 746.37046732, 200.570021537, 2061162, 6.4e-05), alg_cluster.Cluster(set(['13067']), 747.238620236, 397.293799252, 607751, 6.4e-05), alg_cluster.Cluster(set(['13057']), 748.412720226, 389.846908157, 141903, 5.3e-05), alg_cluster.Cluster(set(['13121']), 750.160287596, 399.907752014, 816006, 7e-05), alg_cluster.Cluster(set(['13113']), 750.29432181, 409.288659145, 91263, 5.1e-05), alg_cluster.Cluster(set(['26099']), 750.610280372, 190.468671453, 788149, 5.1e-05), alg_cluster.Cluster(set(['13063']), 752.853876848, 406.722877803, 236517, 6.6e-05), alg_cluster.Cluster(set(['47093']), 753.012743594, 348.235180569, 382032, 5.6e-05), alg_cluster.Cluster(set(['13255']), 754.429031747, 412.402694941, 58417, 4.9e-05), alg_cluster.Cluster(set(['13089']), 754.465443436, 400.059456026, 665865, 6.8e-05), alg_cluster.Cluster(set(['13117']), 755.145102581, 389.478397813, 98407, 5.1e-05), alg_cluster.Cluster(set(['13087']), 755.693541123, 468.194002931, 28240, 4.9e-05), alg_cluster.Cluster(set(['13151']), 756.589546538, 407.288873768, 119341, 5.6e-05), alg_cluster.Cluster(set(['13135']), 758.038826857, 395.110327675, 588448, 6.3e-05), alg_cluster.Cluster(set(['39049']), 758.062157993, 253.603273009, 1068978, 5.2e-05), alg_cluster.Cluster(set(['13247']), 758.37864157, 402.49780372, 70111, 5.6e-05), alg_cluster.Cluster(set(['13095']), 761.086378978, 451.967184234, 96065, 4.9e-05), alg_cluster.Cluster(set(['13217']), 762.124521207, 404.381839078, 62001, 5.2e-05), alg_cluster.Cluster(set(['12073']), 762.463896365, 477.365342219, 239452, 6.1e-05), alg_cluster.Cluster(set(['13013']), 763.778282645, 393.625933437, 46144, 4.7e-05), alg_cluster.Cluster(set(['13297']), 763.860443745, 398.939532724, 60687, 5e-05), alg_cluster.Cluster(set(['13021']), 767.744846588, 421.175433164, 153887, 5.4e-05), alg_cluster.Cluster(set(['21019']), 768.726553092, 290.270551648, 49752, 5.8e-05), alg_cluster.Cluster(set(['13153']), 768.866056624, 429.26170891, 110765, 4.6e-05), alg_cluster.Cluster(set(['13275']), 768.884153625, 466.608446685, 42737, 5.5e-05), alg_cluster.Cluster(set(['13219']), 769.191246041, 396.756414858, 26225, 4.7e-05), alg_cluster.Cluster(set(['13059']), 770.365599785, 394.047543369, 101489, 5.3e-05), alg_cluster.Cluster(set(['39087']), 770.625409557, 283.93917465, 62319, 4.6e-05), alg_cluster.Cluster(set(['12065']), 770.707334208, 476.851119419, 12902, 4.7e-05), alg_cluster.Cluster(set(['39035']), 776.351457758, 216.558042612, 1393978, 5.8e-05), alg_cluster.Cluster(set(['45007']), 782.226804679, 379.132979851, 165740, 4.6e-05), alg_cluster.Cluster(set(['47163']), 782.499804827, 331.593361246, 153048, 4.7e-05), alg_cluster.Cluster(set(['51520']), 784.05333332, 328.847863787, 17367, 5.6e-05), alg_cluster.Cluster(set(['45045']), 785.676714035, 369.542097768, 379616, 5.2e-05), alg_cluster.Cluster(set(['54039']), 789.786928856, 287.714693693, 200073, 4.8e-05), alg_cluster.Cluster(set(['13073']), 792.804322285, 400.662049665, 89288, 5e-05), alg_cluster.Cluster(set(['45083']), 793.239375577, 367.754402204, 253791, 4.8e-05), alg_cluster.Cluster(set(['12023']), 796.544243535, 477.588016437, 56513, 5e-05), alg_cluster.Cluster(set(['13245']), 796.799727342, 404.391349655, 199775, 5.9e-05), alg_cluster.Cluster(set(['54009']), 799.221537984, 240.153315109, 25447, 7.7e-05), alg_cluster.Cluster(set(['45003']), 804.805415327, 398.777010123, 142552, 4.8e-05), alg_cluster.Cluster(set(['37071']), 806.573724958, 356.877472978, 190365, 4.8e-05), alg_cluster.Cluster(set(['51640']), 806.823088186, 324.555032883, 6837, 5.2e-05), alg_cluster.Cluster(set(['45091']), 807.886971209, 364.469906345, 164614, 4.7e-05), alg_cluster.Cluster(set(['42003']), 809.003419092, 233.899638663, 1281666, 6.1e-05), alg_cluster.Cluster(set(['12057']), 810.083518173, 529.957501469, 998948, 4.7e-05), alg_cluster.Cluster(set(['45063']), 810.799412401, 389.504491524, 216014, 4.8e-05), alg_cluster.Cluster(set(['51750']), 811.690750985, 312.898714856, 15859, 4.6e-05), alg_cluster.Cluster(set(['12019']), 812.760924762, 481.531359294, 140814, 4.6e-05), alg_cluster.Cluster(set(['37119']), 813.724315147, 356.853362811, 695454, 5.6e-05), alg_cluster.Cluster(set(['12031']), 815.145119735, 473.114295395, 778879, 4.9e-05), alg_cluster.Cluster(set(['45079']), 816.541641816, 385.156707247, 320677, 5.4e-05), alg_cluster.Cluster(set(['37025']), 818.35071393, 352.864665547, 131063, 4.7e-05), alg_cluster.Cluster(set(['36029']), 820.38582573, 177.013330392, 950265, 5e-05), alg_cluster.Cluster(set(['51775', '51161', '51770']), 821.105453327, 307.678349369, 205436, 5.95638203625e-05), alg_cluster.Cluster(set(['12071']), 822.736368501, 559.319167615, 440888, 4.7e-05), alg_cluster.Cluster(set(['37057']), 823.18698731, 342.886324895, 147246, 4.6e-05), alg_cluster.Cluster(set(['51690']), 826.020074281, 321.016553783, 15416, 4.9e-05), alg_cluster.Cluster(set(['12095']), 828.477422871, 512.999289781, 896344, 5.2e-05), alg_cluster.Cluster(set(['51515']), 829.535165128, 304.77544828, 6299, 4.7e-05), alg_cluster.Cluster(set(['12117']), 829.684398031, 508.399477043, 365196, 4.9e-05), alg_cluster.Cluster(set(['37081']), 829.726844142, 334.637483646, 421048, 4.8e-05), alg_cluster.Cluster(set(['24001']), 834.528507681, 249.862506444, 74930, 4.8e-05), alg_cluster.Cluster(set(['51590']), 834.603738103, 321.684114822, 48411, 4.8e-05), alg_cluster.Cluster(set(['51680']), 835.264653899, 302.326633095, 65269, 5.8e-05), alg_cluster.Cluster(set(['51660']), 836.595959983, 277.430066898, 40468, 5.2e-05), alg_cluster.Cluster(set(['51820']), 837.346467474, 285.851438947, 19520, 5.8e-05), alg_cluster.Cluster(set(['51540']), 845.239184424, 285.286609195, 45049, 5.4e-05), alg_cluster.Cluster(set(['51840']), 845.843602685, 258.214178983, 23585, 7.1e-05), alg_cluster.Cluster(set(['24043']), 849.08430905, 247.089766046, 131923, 4.6e-05), alg_cluster.Cluster(set(['12099']), 852.886370359, 552.951546188, 1131184, 5.1e-05), alg_cluster.Cluster(set(['12011']), 854.318125011, 564.174521982, 1623018, 5e-05), alg_cluster.Cluster(set(['12086']), 855.717845944, 576.450702277, 2253362, 4.9e-05), alg_cluster.Cluster(set(['51107']), 855.815074611, 258.409034617, 169599, 4.9e-05), alg_cluster.Cluster(set(['24021']), 858.130790832, 248.37974611, 195277, 5e-05), alg_cluster.Cluster(set(['51683', '51685', '51153']), 859.744886575, 265.871385377, 326238, 4.87530637142e-05), alg_cluster.Cluster(set(['51630']), 861.833345286, 275.583093594, 19279, 4.8e-05), alg_cluster.Cluster(set(['51600', '51610', '51059']), 863.057558887, 262.414444763, 1001624, 5.70384695255e-05), alg_cluster.Cluster(set(['24031']), 863.180208628, 255.65657011, 873341, 6.5e-05), alg_cluster.Cluster(set(['51085']), 864.408961095, 288.394572842, 86320, 4.6e-05), alg_cluster.Cluster(set(['51041']), 864.751974086, 297.511130095, 259903, 5.2e-05), alg_cluster.Cluster(set(['51087', '51760']), 865.974521771, 293.191364776, 460090, 7.28875654763e-05), alg_cluster.Cluster(set(['51510', '11001', '51013']), 866.960156336, 260.951000675, 889795, 7.57024573076e-05), alg_cluster.Cluster(set(['24027']), 867.127763298, 252.141340019, 247842, 6e-05), alg_cluster.Cluster(set(['51595']), 868.072034995, 313.157738101, 5665, 4.8e-05), alg_cluster.Cluster(set(['51730', '51570']), 868.39599686, 300.285038517, 50637, 5.46673776093e-05), alg_cluster.Cluster(set(['51670']), 869.945850178, 298.459424039, 22354, 5.5e-05), alg_cluster.Cluster(set(['24033']), 870.786325575, 261.829970016, 801515, 6.4e-05), alg_cluster.Cluster(set(['24005']), 871.921241442, 246.932531615, 754292, 6.1e-05), alg_cluster.Cluster(set(['24510']), 872.946822486, 249.834427518, 651154, 7.4e-05), alg_cluster.Cluster(set(['24003']), 874.299504257, 257.092978322, 489656, 5.3e-05), alg_cluster.Cluster(set(['24025']), 876.595690503, 242.900377968, 218590, 4.6e-05), alg_cluster.Cluster(set(['42011']), 878.575486588, 221.678319842, 373638, 4.6e-05), alg_cluster.Cluster(set(['51700']), 884.986697443, 300.108812755, 180150, 4.6e-05), alg_cluster.Cluster(set(['51650']), 888.170749548, 300.381712282, 146437, 4.6e-05), alg_cluster.Cluster(set(['10003']), 888.26796027, 239.785084878, 500265, 4.9e-05), alg_cluster.Cluster(set(['51710']), 890.538449993, 303.826879654, 234403, 4.9e-05), alg_cluster.Cluster(set(['42045']), 890.848103047, 231.287395353, 550864, 5.2e-05), alg_cluster.Cluster(set(['42101']), 894.72914873, 227.900547575, 1517550, 5.8e-05), alg_cluster.Cluster(set(['34007']), 899.061431482, 232.054232622, 508932, 5.7e-05), alg_cluster.Cluster(set(['34021']), 900.837767215, 220.161475984, 350761, 4.6e-05), alg_cluster.Cluster(set(['36001']), 900.893220363, 164.489226174, 294565, 4.9e-05), alg_cluster.Cluster(set(['34005']), 903.696809122, 229.406192432, 423394, 4.6e-05), alg_cluster.Cluster(set(['34031']), 904.161746346, 201.712206531, 489049, 6.3e-05), alg_cluster.Cluster(set(['34023']), 904.976453741, 215.001458637, 750162, 5.9e-05), alg_cluster.Cluster(set(['34039']), 905.587082153, 210.045085725, 522541, 7.3e-05), alg_cluster.Cluster(set(['34013']), 906.236730753, 206.977429459, 793633, 7.1e-05), alg_cluster.Cluster(set(['36087']), 907.86300402, 197.579715272, 286753, 4.9e-05), alg_cluster.Cluster(set(['34003']), 907.896066895, 202.302470427, 884118, 6.9e-05), alg_cluster.Cluster(set(['36083']), 907.985922231, 160.259081442, 152538, 4.7e-05), alg_cluster.Cluster(set(['36085']), 908.749199508, 211.307161341, 443728, 7e-05), alg_cluster.Cluster(set(['34017']), 909.08042421, 207.462937763, 608975, 9.1e-05), alg_cluster.Cluster(set(['36079']), 910.914101605, 190.332224, 95745, 4.8e-05), alg_cluster.Cluster(set(['36061']), 911.072622034, 205.783086757, 1537195, 0.00015), alg_cluster.Cluster(set(['36047']), 911.595580089, 208.928374072, 2465326, 9.8e-05), alg_cluster.Cluster(set(['36119']), 912.141547823, 196.592589736, 923459, 6.5e-05), alg_cluster.Cluster(set(['36005']), 912.315497328, 203.674106811, 1332650, 0.00011), alg_cluster.Cluster(set(['36081']), 913.462051588, 207.615750359, 2229379, 8.9e-05), alg_cluster.Cluster(set(['09001']), 917.147792831, 191.892113077, 882567, 5.3e-05), alg_cluster.Cluster(set(['36059']), 917.384980291, 205.43647538, 1334544, 7.6e-05), alg_cluster.Cluster(set(['09005']), 917.693447363, 179.72354771, 182193, 4.8e-05), alg_cluster.Cluster(set(['25015']), 923.51496257, 165.065795331, 152251, 4.6e-05), alg_cluster.Cluster(set(['09009']), 924.915452791, 187.557375239, 824008, 5.4e-05), alg_cluster.Cluster(set(['25013']), 925.818389384, 169.274417202, 456228, 5.2e-05), alg_cluster.Cluster(set(['09003']), 925.917212741, 177.152290276, 857183, 5.7e-05), alg_cluster.Cluster(set(['36103']), 929.241649488, 199.278463003, 1419369, 6.3e-05), alg_cluster.Cluster(set(['09007']), 931.146412937, 184.643328414, 155071, 5.1e-05), alg_cluster.Cluster(set(['09013']), 932.609837236, 174.394154191, 136364, 5e-05), alg_cluster.Cluster(set(['33011']), 936.826960243, 147.991772374, 380841, 5e-05), alg_cluster.Cluster(set(['25017']), 943.405755498, 156.504310828, 1465396, 5.6e-05), alg_cluster.Cluster(set(['25021']), 948.811505542, 162.842169307, 650308, 5.3e-05), alg_cluster.Cluster(set(['25025']), 950.299079197, 158.007070966, 689807, 7e-05)]), (2.2818187632915095, 262, 265), "\n\nOwlTest Test #18:  fast_closest_pair\n\n")


    # print "\n\n##################################################"
    # print "\n\t\t---- Test #19 ----"
    # print "\n\n\n##################################################\n"
    # # fast
    # test_set = [alg_cluster.Cluster(set([]), 1.0, 0.0, 1, 0), alg_cluster.Cluster(set([]), 4.0, 0.0, 1, 0), alg_cluster.Cluster(set([]), 5.0, 0.0, 1, 0), alg_cluster.Cluster(set([]), 7.0, 0.0, 1, 0)]
    # suite.run_test(cpf.fast_closest_pair(test_set), (1.0, 1, 2), "\n\nOwlTest Test #19:  fast_closest_pair\n\n")



    #######################################################################
 	# The following tests are failing ###########################################

    # print "\n\n##################################################"
    # print "\n\t\t---- Test #20 ----"
    # print "\n\n\n##################################################\n"
    # suite.run_test(cpf.kmeans_clustering([alg_cluster.Cluster(set(['00001']), 0.0, 1.0, 1, 0), alg_cluster.Cluster(set(['00002']), 1.0, 0.0, 3, 5.6e-05), alg_cluster.Cluster(set(['00003']), 2.0, 4.0, 5, 1.0e-10), alg_cluster.Cluster(set(['00004']), 2.0, 3.0, 1, 2.2e-7)], 2, 2), [alg_cluster.Cluster(set(['00004', '00003']), 2.0, 3.83333333333, 6, 3.675e-08), alg_cluster.Cluster(set(['00001', '00002']), 0.75, 0.25, 4, 4.2e-05)], "\n\nOwlTest Test #20:  kmeans_clustering\n\n")


    # print "\n\n##################################################"
    # print "\n\t\t---- Test #21 ----"
    # print "\n\n\n##################################################\n"
    # suite.run_test(cpf.kmeans_clustering([alg_cluster.Cluster(set(['00001']), 0.0, 1.0, 1, 0), alg_cluster.Cluster(set(['00002']), 1.0, 0.0, 3, 5.6e-05), alg_cluster.Cluster(set(['00003']), 2.0, 4.0, 5, 1.0e-10), alg_cluster.Cluster(set(['00004']), 2.0, 3.0, 1, 2.2e-7)], 2, 2), [alg_cluster.Cluster(set(['00004', '00003']), 2.0, 3.83333333333, 6, 3.675e-08), alg_cluster.Cluster(set(['00001', '00002']), 0.75, 0.25, 4, 4.2e-05)], "\n\nOwlTest Test #21:  kmeans_clustering\n\n")


    # print "\n\n##################################################"
    # print "\n\t\t---- Test #22 ----"
    # print "\n\n\n##################################################\n"
    # suite.run_test(cpf.kmeans_clustering([alg_cluster.Cluster(set(['00001']), 0.0, 1.0, 3, 0), alg_cluster.Cluster(set(['00002']), 1.0, 0.0, 3, 5.6e-05), alg_cluster.Cluster(set(['00003']), 2.0, 4.0, 3, 1.0e-10), alg_cluster.Cluster(set(['00004']), 2.0, 3.0, 3, 2.2e-7)], 2, 2), [alg_cluster.Cluster(set(['00001', '00002']), 0.5, 0.5, 6, 2.8e-05), alg_cluster.Cluster(set(['00004', '00003']), 2.0, 3.5, 6, 1.1005e-07)], "\n\nOwlTest Test #22:  kmeans_clustering\n\n")


    # print "\n\n##################################################"
    # print "\n\t\t---- Test #23 ----"
    # print "\n\n\n##################################################\n"
    # suite.run_test(cpf.kmeans_clustering([alg_cluster.Cluster(set(['00001']), 0.0, 1.0, 1, 0), alg_cluster.Cluster(set(['00002']), 1.0, 0.0, 4, 5.6e-05), alg_cluster.Cluster(set(['00003']), 2.0, 4.0, 4, 1.0e-10), alg_cluster.Cluster(set(['00004']), 2, 3, 1, 2.2e-7)], 2, 2), [alg_cluster.Cluster(set(['00004', '00003']), 2.0, 3.8, 5, 4.408e-08), alg_cluster.Cluster(set(['00001', '00002']), 0.8, 0.2, 5, 4.48e-05)], "\n\nOwlTest Test #23:  kmeans_clustering\n\n")


    # print "\n\n##################################################"
    # print "\n\t\t---- Test #24 ----"
    # print "\n\n\n##################################################\n"
    # TEST_CASE= [alg_cluster.Cluster(set(['00']), 0.0, 0.0, 1, 0.1), alg_cluster.Cluster(set(['10']), 1.0, 0.0, 2, 0.1), alg_cluster.Cluster(set(['11']), 1.0, 1.0, 3, 0.1), alg_cluster.Cluster(set(['01']), 0.0, 1.0, 4, 0.1), alg_cluster.Cluster(set(['1010']), 10.0, 10.0, 5, 0.1), alg_cluster.Cluster(set(['1011']), 10.0, 11.0, 6, 0.1), alg_cluster.Cluster(set(['1111']), 11.0, 11.0, 7, 0.1), alg_cluster.Cluster(set(['1110']), 11.0, 10.0, 8, 0.1)]
    # suite.run_test(cpf.kmeans_clustering(TEST_CASE, 2, 2), [alg_cluster.Cluster(set(['11', '10', '00', '01']), 0.5, 0.7, 10, 0.1), alg_cluster.Cluster(set(['1111', '1110', '1010', '1011']), 10.5769230769, 10.5, 26, 0.1)], "\n\nOwlTest Test #24:  kmeans_clustering\n\n")


    # print "\n\n##################################################"
    # print "\n\t\t---- Test #25 ----"
    # print "\n\n\n##################################################\n"
    # TEST_CASE= [alg_cluster.Cluster(set(['00']), 0.0, 0.0, 1, 0.1), alg_cluster.Cluster(set(['10']), 0.5, 0.0, 1, 0.1), alg_cluster.Cluster(set(['11']), 1.0, 1.0, 1, 0.1), alg_cluster.Cluster(set(['01']), 1.0, 2.0, 4, 0.1), alg_cluster.Cluster(set(['1010']), 10.0, 10.0, 5, 0.1), alg_cluster.Cluster(set(['1011']), 10.0, 11.0, 6, 0.1), alg_cluster.Cluster(set(['1111']), 11.0, 11.0, 7, 0.1), alg_cluster.Cluster(set(['1110']), 11.0, 10.0, 8, 0.1)]
    # suite.run_test(cpf.kmeans_clustering(TEST_CASE, 2, 2), [alg_cluster.Cluster(set(['11', '10', '00', '01']), 0.5, 0.7, 10, 0.1), alg_cluster.Cluster(set(['1111', '1110', '1010', '1011']), 10.5769230769, 10.5, 26, 0.1)], "\n\nOwlTest Test #25:  kmeans_clustering\n\n")


    # print "\n\n##################################################"
    # print "\n\t\t---- Test #26 ----"
    # print "\n\n\n##################################################\n"
    # suite.run_test(cpf.kmeans_clustering([alg_cluster.Cluster(set(['00']), 0.0, 0.0, 1, 0.1), alg_cluster.Cluster(set(['10']), 1.0, 0.0, 2, 0.1), alg_cluster.Cluster(set(['11']), 1.0, 1.0, 3, 0.1), alg_cluster.Cluster(set(['01']), 0.0, 1.0, 4, 0.1), alg_cluster.Cluster(set(['1010']), 10.0, 10.0, 5, 0.1), alg_cluster.Cluster(set(['1011']), 10.0, 11.0, 6, 0.1), alg_cluster.Cluster(set(['1111']), 11.0, 11.0, 7, 0.1), alg_cluster.Cluster(set(['1110']), 11.0, 10.0, 8, 0.1)], 2, 2), [alg_cluster.Cluster(set(['00', '01', '10', '11']), 0.5, 0.7, 10, 0.1), alg_cluster.Cluster(set(['1010', '1011', '1110', '1111']), 10.5769230769, 10.5, 26, 0.1)], "\n\nOwlTest Test #26:  kmeans_clustering\n\n")


    print "\n\n##################################################"
    print "\n\t\t---- Test #27 ----"
    print "\n\n\n##################################################\n"
    # [-6.2 pts] fast_closest_pair expected (4.4507947698618642, 148, 154) but received (4.4894315064391543, 219, 220)
    suite.run_test(cpf.fast_closest_pair([alg_cluster.Cluster(set(['06081']), 52.6171444847, 262.707477827, 707161, 5.6e-05), alg_cluster.Cluster(set(['06075']), 52.7404001225, 254.517429395, 776733, 8.4e-05), alg_cluster.Cluster(set(['06001']), 61.782098866, 259.312457296, 1443741, 7e-05), alg_cluster.Cluster(set(['06013']), 62.7064814493, 253.075658488, 948816, 5e-05), alg_cluster.Cluster(set(['06085']), 63.1509653633, 270.516712105, 1682585, 6.3e-05), alg_cluster.Cluster(set(['06095']), 64.1452346104, 245.330036641, 394542, 4.6e-05), alg_cluster.Cluster(set(['06021']), 65.2043358182, 213.245337355, 26453, 6.9e-05), alg_cluster.Cluster(set(['06113']), 68.2602083189, 236.862609218, 168660, 5.9e-05), alg_cluster.Cluster(set(['06077']), 74.1740312349, 256.485831492, 563598, 5.2e-05), alg_cluster.Cluster(set(['06101']), 74.2003718491, 229.646592975, 78930, 5.6e-05), alg_cluster.Cluster(set(['06067']), 74.3547338322, 245.49501455, 1223499, 6.1e-05), alg_cluster.Cluster(set(['06083']), 76.0382837186, 340.420376302, 399347, 6.4e-05), alg_cluster.Cluster(set(['06089']), 77.359494209, 188.945068958, 163256, 5.7e-05), alg_cluster.Cluster(set(['06099']), 77.5948233373, 265.302047042, 446997, 5.1e-05), alg_cluster.Cluster(set(['41029']), 78.4141193387, 147.629027207, 181269, 5.1e-05), alg_cluster.Cluster(set(['06007']), 79.7767444918, 214.910128237, 203171, 4.7e-05), alg_cluster.Cluster(set(['06047']), 80.1217093401, 275.749681794, 210554, 4.7e-05), alg_cluster.Cluster(set(['06115']), 81.8982358215, 225.444950413, 60219, 4.9e-05), alg_cluster.Cluster(set(['06031']), 89.2713893096, 304.772281089, 129461, 5.1e-05), alg_cluster.Cluster(set(['06061']), 90.0298511972, 233.575536165, 248399, 5.2e-05), alg_cluster.Cluster(set(['41067']), 92.2254623376, 76.2593957841, 445342, 7.3e-05), alg_cluster.Cluster(set(['06111']), 93.4973310868, 344.590570899, 753197, 5.8e-05), alg_cluster.Cluster(set(['06019']), 95.6093812211, 290.162708843, 799407, 6.4e-05), alg_cluster.Cluster(set(['06039']), 97.2145136451, 278.975077449, 123109, 6e-05), alg_cluster.Cluster(set(['41047']), 97.399304684, 93.4988892144, 284834, 4.8e-05), alg_cluster.Cluster(set(['41051']), 103.293707198, 79.5194104381, 660486, 9.3e-05), alg_cluster.Cluster(set(['41005']), 103.421444616, 88.318590492, 338391, 6.6e-05), alg_cluster.Cluster(set(['06029']), 103.787886113, 326.006585349, 661645, 9.7e-05), alg_cluster.Cluster(set(['53011']), 104.00046468, 74.0182527309, 345238, 6.4e-05), alg_cluster.Cluster(set(['06037']), 105.369854549, 359.050126004, 9519338, 0.00011), alg_cluster.Cluster(set(['06107']), 108.085024898, 306.351832438, 368021, 5.8e-05), alg_cluster.Cluster(set(['06059']), 113.997715586, 368.503452566, 2846289, 9.8e-05), alg_cluster.Cluster(set(['53033']), 125.27486023, 39.1497730391, 1737034, 5.8e-05), alg_cluster.Cluster(set(['06073']), 129.2075529, 387.064888184, 2813833, 6.6e-05), alg_cluster.Cluster(set(['06027']), 136.048381588, 306.102582286, 17945, 5.3e-05), alg_cluster.Cluster(set(['06065']), 146.410389633, 374.21707964, 1545387, 6.1e-05), alg_cluster.Cluster(set(['06071']), 148.402461892, 350.061039619, 1709434, 7.7e-05), alg_cluster.Cluster(set(['06025']), 156.397958859, 393.161127277, 142361, 5.6e-05), alg_cluster.Cluster(set(['32003']), 178.153492162, 324.160586278, 1375765, 4.9e-05), alg_cluster.Cluster(set(['04013']), 214.128077618, 396.893960776, 3072149, 6.8e-05), alg_cluster.Cluster(set(['08059']), 364.301409054, 270.903209636, 527056, 5.5e-05), alg_cluster.Cluster(set(['08031']), 371.038986573, 266.847932979, 554636, 7.9e-05), alg_cluster.Cluster(set(['08001']), 379.950978294, 265.078784954, 363857, 6.6e-05), alg_cluster.Cluster(set(['08005']), 380.281283151, 270.268826873, 487967, 5.9e-05), alg_cluster.Cluster(set(['48003']), 398.962651077, 443.958242671, 13004, 5.3e-05), alg_cluster.Cluster(set(['48029']), 477.886663525, 514.095891984, 1392931, 5e-05), alg_cluster.Cluster(set(['48453']), 493.032076052, 493.597339677, 812280, 5.2e-05), alg_cluster.Cluster(set(['20173']), 502.059178492, 322.563937328, 452869, 5.1e-05), alg_cluster.Cluster(set(['48439']), 503.673815634, 437.477028749, 1446219, 5e-05), alg_cluster.Cluster(set(['48113']), 513.657901701, 437.682966844, 2218899, 5.4e-05), alg_cluster.Cluster(set(['31109']), 516.78216337, 250.188023316, 250291, 6.1e-05), alg_cluster.Cluster(set(['48085']), 517.70778434, 427.895646823, 491675, 4.8e-05), alg_cluster.Cluster(set(['48041']), 522.88823653, 487.351397054, 152415, 4.6e-05), alg_cluster.Cluster(set(['31055']), 525.799353573, 238.14275337, 463585, 6.2e-05), alg_cluster.Cluster(set(['31153']), 527.065884457, 242.564882077, 122595, 4.9e-05), alg_cluster.Cluster(set(['40143']), 529.254373189, 359.119882043, 563299, 5.1e-05), alg_cluster.Cluster(set(['48157']), 533.434165736, 513.008691943, 354452, 4.6e-05), alg_cluster.Cluster(set(['40121']), 534.015957707, 386.972736212, 43953, 5.2e-05), alg_cluster.Cluster(set(['48201']), 540.54731652, 504.62993865, 3400578, 6e-05), alg_cluster.Cluster(set(['48423']), 542.731029941, 446.457985602, 174706, 4.7e-05), alg_cluster.Cluster(set(['20091']), 549.942556013, 294.526691953, 451086, 5e-05), alg_cluster.Cluster(set(['20209']), 550.661615218, 289.397706643, 157882, 5.1e-05), alg_cluster.Cluster(set(['48183']), 552.333188086, 444.322743975, 111379, 5.5e-05), alg_cluster.Cluster(set(['29095']), 558.451289477, 291.559180265, 654880, 4.6e-05), alg_cluster.Cluster(set(['48203']), 560.270010669, 442.325574621, 62110, 5e-05), alg_cluster.Cluster(set(['48365']), 562.161603376, 451.397747537, 22756, 4.8e-05), alg_cluster.Cluster(set(['48245']), 565.746895809, 504.541799993, 252051, 5.7e-05), alg_cluster.Cluster(set(['27053']), 570.131597541, 151.403325043, 1116200, 5.8e-05), alg_cluster.Cluster(set(['19153']), 570.801738263, 228.668095362, 374601, 5.2e-05), alg_cluster.Cluster(set(['22017']), 570.826412839, 442.202574191, 252161, 6.2e-05), alg_cluster.Cluster(set(['48361']), 571.064681764, 498.867855628, 84966, 4.6e-05), alg_cluster.Cluster(set(['27003']), 573.942484199, 145.118314377, 298084, 4.6e-05), alg_cluster.Cluster(set(['22015']), 575.844790614, 439.774115304, 98310, 4.9e-05), alg_cluster.Cluster(set(['27123']), 576.516685202, 151.219277482, 511035, 5.6e-05), alg_cluster.Cluster(set(['19013']), 591.836020306, 209.588448378, 128012, 4.6e-05), alg_cluster.Cluster(set(['05139']), 595.14987863, 427.226433206, 45629, 5.4e-05), alg_cluster.Cluster(set(['05119']), 598.676543754, 389.524749021, 361474, 5.3e-05), alg_cluster.Cluster(set(['19057']), 612.882010424, 244.949915243, 42351, 5.1e-05), alg_cluster.Cluster(set(['22047']), 621.964681856, 493.299089267, 33320, 4.7e-05), alg_cluster.Cluster(set(['19163', '17161']), 622.251364027, 229.337743865, 308042, 5.30905136313e-05), alg_cluster.Cluster(set(['22121']), 622.795050771, 488.85623181, 21601, 5.2e-05), alg_cluster.Cluster(set(['29183']), 625.995955203, 293.938397646, 283883, 4.7e-05), alg_cluster.Cluster(set(['22033']), 627.532921181, 486.959525017, 412852, 5.3e-05), alg_cluster.Cluster(set(['29189', '29510']), 629.976164517, 297.473005985, 1364504, 6.22965861588e-05), alg_cluster.Cluster(set(['28027']), 631.700027283, 400.68741948, 30622, 6e-05), alg_cluster.Cluster(set(['28049']), 638.051593606, 445.785870317, 250800, 6e-05), alg_cluster.Cluster(set(['22095']), 639.022908787, 496.564276607, 43044, 5.1e-05), alg_cluster.Cluster(set(['55025']), 640.259029023, 193.059886956, 426526, 5.2e-05), alg_cluster.Cluster(set(['28033']), 642.267628251, 384.839249499, 107199, 4.6e-05), alg_cluster.Cluster(set(['47157']), 643.395763039, 378.031744605, 897472, 5.5e-05), alg_cluster.Cluster(set(['28089']), 644.644674143, 437.339606833, 74674, 4.6e-05), alg_cluster.Cluster(set(['17201']), 645.722085, 209.852492823, 278418, 4.8e-05), alg_cluster.Cluster(set(['22051']), 647.254240096, 504.485538044, 455466, 4.6e-05), alg_cluster.Cluster(set(['28121']), 647.272159578, 445.553667274, 115327, 4.8e-05), alg_cluster.Cluster(set(['28043']), 647.649972548, 410.394464547, 23263, 4.7e-05), alg_cluster.Cluster(set(['22071']), 651.338581076, 496.465402252, 484674, 6.4e-05), alg_cluster.Cluster(set(['55087']), 653.76289252, 160.48762926, 160971, 4.6e-05), alg_cluster.Cluster(set(['55133']), 659.073603882, 192.731818115, 360767, 4.9e-05), alg_cluster.Cluster(set(['47053']), 660.602484901, 357.318624524, 48152, 4.6e-05), alg_cluster.Cluster(set(['55009']), 661.295442891, 158.436859333, 226778, 5.2e-05), alg_cluster.Cluster(set(['28035']), 662.340841725, 469.562070989, 72604, 5e-05), alg_cluster.Cluster(set(['28159']), 663.514261498, 425.274137823, 20160, 5.9e-05), alg_cluster.Cluster(set(['55079']), 664.855000617, 192.484141264, 940164, 7.4e-05), alg_cluster.Cluster(set(['17031', '17043']), 668.403256539, 219.438581907, 6280902, 5.95604599467e-05), alg_cluster.Cluster(set(['28075']), 672.167227537, 440.608524349, 78161, 4.6e-05), alg_cluster.Cluster(set(['28087']), 674.418402473, 415.122758999, 61586, 4.6e-05), alg_cluster.Cluster(set(['18089']), 677.840033419, 228.268571284, 484564, 4.8e-05), alg_cluster.Cluster(set(['01033']), 684.091279484, 385.661834299, 54984, 4.6e-05), alg_cluster.Cluster(set(['01077']), 686.294590746, 380.947137668, 87966, 4.6e-05), alg_cluster.Cluster(set(['01125']), 692.900099393, 417.773844647, 164875, 5.4e-05), alg_cluster.Cluster(set(['47037']), 700.009323976, 350.107265446, 569891, 6.1e-05), alg_cluster.Cluster(set(['01103']), 702.624988295, 389.788894045, 111064, 5.3e-05), alg_cluster.Cluster(set(['18097']), 703.47637833, 264.614798668, 860454, 4.8e-05), alg_cluster.Cluster(set(['01073']), 704.191210749, 411.014665198, 662047, 7.3e-05), alg_cluster.Cluster(set(['47165']), 705.571676152, 342.569345394, 130449, 4.6e-05), alg_cluster.Cluster(set(['47149']), 707.710145119, 356.803460768, 182023, 5e-05), alg_cluster.Cluster(set(['01089']), 707.938558006, 382.483904975, 276700, 5.1e-05), alg_cluster.Cluster(set(['01117']), 709.193528999, 417.394467797, 143293, 5.6e-05), alg_cluster.Cluster(set(['01115']), 714.563978269, 406.272136377, 64742, 4.7e-05), alg_cluster.Cluster(set(['21111']), 715.347723878, 301.167740487, 693604, 5.9e-05), alg_cluster.Cluster(set(['01121']), 718.485365885, 413.521338651, 80321, 4.9e-05), alg_cluster.Cluster(set(['01055']), 719.112287909, 398.290991634, 103459, 4.9e-05), alg_cluster.Cluster(set(['01101']), 720.281573781, 440.436162917, 223510, 5.7e-05), alg_cluster.Cluster(set(['01015']), 723.907941153, 403.837487318, 112249, 5.6e-05), alg_cluster.Cluster(set(['13295']), 731.703883397, 380.217410319, 61053, 5.4e-05), alg_cluster.Cluster(set(['39017']), 731.844357783, 269.494670001, 332807, 4.9e-05), alg_cluster.Cluster(set(['47065']), 732.643747577, 370.017730905, 307896, 6.1e-05), alg_cluster.Cluster(set(['39061']), 733.263799261, 275.315430247, 845303, 5.4e-05), alg_cluster.Cluster(set(['21117']), 734.066615163, 281.167681124, 151464, 5e-05), alg_cluster.Cluster(set(['13115']), 734.580792996, 390.450110664, 90565, 5.2e-05), alg_cluster.Cluster(set(['13047', '13313']), 736.17111794, 377.242885661, 136807, 5.36631897491e-05), alg_cluster.Cluster(set(['01081']), 736.280761314, 430.281309969, 115092, 5e-05), alg_cluster.Cluster(set(['21067']), 738.000675961, 302.005037855, 260512, 4.8e-05), alg_cluster.Cluster(set(['13045']), 738.792024777, 406.300529008, 87268, 4.6e-05), alg_cluster.Cluster(set(['01113']), 740.385154867, 436.939588695, 49756, 5.6e-05), alg_cluster.Cluster(set(['13129']), 740.472181415, 384.60635928, 44104, 5e-05), alg_cluster.Cluster(set(['13285']), 741.206792819, 419.291408746, 58779, 4.7e-05), alg_cluster.Cluster(set(['13015']), 741.560012096, 390.864452051, 76019, 4.8e-05), alg_cluster.Cluster(set(['13223']), 741.778484027, 398.177004976, 81678, 4.8e-05), alg_cluster.Cluster(set(['39095']), 742.473618138, 216.811437951, 455054, 4.6e-05), alg_cluster.Cluster(set(['26125']), 743.036942153, 192.129690868, 1194156, 5.7e-05), alg_cluster.Cluster(set(['13097']), 744.596506113, 402.962208469, 92174, 5.3e-05), alg_cluster.Cluster(set(['13215']), 745.265661102, 430.987078939, 186291, 5.9e-05), alg_cluster.Cluster(set(['13077']), 745.613117606, 411.392480996, 89215, 4.7e-05), alg_cluster.Cluster(set(['26163']), 746.37046732, 200.570021537, 2061162, 6.4e-05), alg_cluster.Cluster(set(['13057']), 748.412720226, 389.846908157, 141903, 5.3e-05), alg_cluster.Cluster(set(['13067', '13121']), 748.913132176, 398.791948963, 1423757, 6.74388143482e-05), alg_cluster.Cluster(set(['26099']), 750.610280372, 190.468671453, 788149, 5.1e-05), alg_cluster.Cluster(set(['13113', '13063']), 752.141226072, 407.437262154, 327780, 6.18235859418e-05), alg_cluster.Cluster(set(['47093']), 753.012743594, 348.235180569, 382032, 5.6e-05), alg_cluster.Cluster(set(['13255']), 754.429031747, 412.402694941, 58417, 4.9e-05), alg_cluster.Cluster(set(['13089']), 754.465443436, 400.059456026, 665865, 6.8e-05), alg_cluster.Cluster(set(['13117']), 755.145102581, 389.478397813, 98407, 5.1e-05), alg_cluster.Cluster(set(['13087']), 755.693541123, 468.194002931, 28240, 4.9e-05), alg_cluster.Cluster(set(['13151']), 756.589546538, 407.288873768, 119341, 5.6e-05), alg_cluster.Cluster(set(['13135']), 758.038826857, 395.110327675, 588448, 6.3e-05), alg_cluster.Cluster(set(['39049']), 758.062157993, 253.603273009, 1068978, 5.2e-05), alg_cluster.Cluster(set(['13247', '13217']), 760.136606655, 403.38199347, 132112, 5.41227746155e-05), alg_cluster.Cluster(set(['13095']), 761.086378978, 451.967184234, 96065, 4.9e-05), alg_cluster.Cluster(set(['12073']), 762.463896365, 477.365342219, 239452, 6.1e-05), alg_cluster.Cluster(set(['13013']), 763.778282645, 393.625933437, 46144, 4.7e-05), alg_cluster.Cluster(set(['13297']), 763.860443745, 398.939532724, 60687, 5e-05), alg_cluster.Cluster(set(['13021']), 767.744846588, 421.175433164, 153887, 5.4e-05), alg_cluster.Cluster(set(['21019']), 768.726553092, 290.270551648, 49752, 5.8e-05), alg_cluster.Cluster(set(['13153']), 768.866056624, 429.26170891, 110765, 4.6e-05), alg_cluster.Cluster(set(['13275']), 768.884153625, 466.608446685, 42737, 5.5e-05), alg_cluster.Cluster(set(['13219', '13059']), 770.124456082, 394.603787436, 127714, 5.17679502639e-05), alg_cluster.Cluster(set(['39087']), 770.625409557, 283.93917465, 62319, 4.6e-05), alg_cluster.Cluster(set(['12065']), 770.707334208, 476.851119419, 12902, 4.7e-05), alg_cluster.Cluster(set(['39035']), 776.351457758, 216.558042612, 1393978, 5.8e-05), alg_cluster.Cluster(set(['45007']), 782.226804679, 379.132979851, 165740, 4.6e-05), alg_cluster.Cluster(set(['51520', '47163']), 782.658124983, 331.313567482, 170415, 4.79171903882e-05), alg_cluster.Cluster(set(['45045']), 785.676714035, 369.542097768, 379616, 5.2e-05), alg_cluster.Cluster(set(['54039']), 789.786928856, 287.714693693, 200073, 4.8e-05), alg_cluster.Cluster(set(['13073']), 792.804322285, 400.662049665, 89288, 5e-05), alg_cluster.Cluster(set(['45083']), 793.239375577, 367.754402204, 253791, 4.8e-05), alg_cluster.Cluster(set(['12023']), 796.544243535, 477.588016437, 56513, 5e-05), alg_cluster.Cluster(set(['13245']), 796.799727342, 404.391349655, 199775, 5.9e-05), alg_cluster.Cluster(set(['54009']), 799.221537984, 240.153315109, 25447, 7.7e-05), alg_cluster.Cluster(set(['45003']), 804.805415327, 398.777010123, 142552, 4.8e-05), alg_cluster.Cluster(set(['37071']), 806.573724958, 356.877472978, 190365, 4.8e-05), alg_cluster.Cluster(set(['51640']), 806.823088186, 324.555032883, 6837, 5.2e-05), alg_cluster.Cluster(set(['45091']), 807.886971209, 364.469906345, 164614, 4.7e-05), alg_cluster.Cluster(set(['42003']), 809.003419092, 233.899638663, 1281666, 6.1e-05), alg_cluster.Cluster(set(['12057']), 810.083518173, 529.957501469, 998948, 4.7e-05), alg_cluster.Cluster(set(['45063']), 810.799412401, 389.504491524, 216014, 4.8e-05), alg_cluster.Cluster(set(['51750']), 811.690750985, 312.898714856, 15859, 4.6e-05), alg_cluster.Cluster(set(['12019']), 812.760924762, 481.531359294, 140814, 4.6e-05), alg_cluster.Cluster(set(['37119']), 813.724315147, 356.853362811, 695454, 5.6e-05), alg_cluster.Cluster(set(['12031']), 815.145119735, 473.114295395, 778879, 4.9e-05), alg_cluster.Cluster(set(['45079']), 816.541641816, 385.156707247, 320677, 5.4e-05), alg_cluster.Cluster(set(['37025']), 818.35071393, 352.864665547, 131063, 4.7e-05), alg_cluster.Cluster(set(['36029']), 820.38582573, 177.013330392, 950265, 5e-05), alg_cluster.Cluster(set(['51775', '51161', '51770']), 821.105453327, 307.678349369, 205436, 5.95638203625e-05), alg_cluster.Cluster(set(['12071']), 822.736368501, 559.319167615, 440888, 4.7e-05), alg_cluster.Cluster(set(['37057']), 823.18698731, 342.886324895, 147246, 4.6e-05), alg_cluster.Cluster(set(['51690']), 826.020074281, 321.016553783, 15416, 4.9e-05), alg_cluster.Cluster(set(['12095']), 828.477422871, 512.999289781, 896344, 5.2e-05), alg_cluster.Cluster(set(['51515']), 829.535165128, 304.77544828, 6299, 4.7e-05), alg_cluster.Cluster(set(['12117']), 829.684398031, 508.399477043, 365196, 4.9e-05), alg_cluster.Cluster(set(['37081']), 829.726844142, 334.637483646, 421048, 4.8e-05), alg_cluster.Cluster(set(['24001']), 834.528507681, 249.862506444, 74930, 4.8e-05), alg_cluster.Cluster(set(['51590']), 834.603738103, 321.684114822, 48411, 4.8e-05), alg_cluster.Cluster(set(['51680']), 835.264653899, 302.326633095, 65269, 5.8e-05), alg_cluster.Cluster(set(['51660']), 836.595959983, 277.430066898, 40468, 5.2e-05), alg_cluster.Cluster(set(['51820']), 837.346467474, 285.851438947, 19520, 5.8e-05), alg_cluster.Cluster(set(['51540']), 845.239184424, 285.286609195, 45049, 5.4e-05), alg_cluster.Cluster(set(['51840']), 845.843602685, 258.214178983, 23585, 7.1e-05), alg_cluster.Cluster(set(['24043']), 849.08430905, 247.089766046, 131923, 4.6e-05), alg_cluster.Cluster(set(['12099']), 852.886370359, 552.951546188, 1131184, 5.1e-05), alg_cluster.Cluster(set(['12011']), 854.318125011, 564.174521982, 1623018, 5e-05), alg_cluster.Cluster(set(['12086']), 855.717845944, 576.450702277, 2253362, 4.9e-05), alg_cluster.Cluster(set(['51107']), 855.815074611, 258.409034617, 169599, 4.9e-05), alg_cluster.Cluster(set(['24021']), 858.130790832, 248.37974611, 195277, 5e-05), alg_cluster.Cluster(set(['51683', '51685', '51153']), 859.744886575, 265.871385377, 326238, 4.87530637142e-05), alg_cluster.Cluster(set(['51630']), 861.833345286, 275.583093594, 19279, 4.8e-05), alg_cluster.Cluster(set(['51600', '51610', '51059']), 863.057558887, 262.414444763, 1001624, 5.70384695255e-05), alg_cluster.Cluster(set(['24031']), 863.180208628, 255.65657011, 873341, 6.5e-05), alg_cluster.Cluster(set(['51085']), 864.408961095, 288.394572842, 86320, 4.6e-05), alg_cluster.Cluster(set(['51041']), 864.751974086, 297.511130095, 259903, 5.2e-05), alg_cluster.Cluster(set(['51087', '51760']), 865.974521771, 293.191364776, 460090, 7.28875654763e-05), alg_cluster.Cluster(set(['24027']), 867.127763298, 252.141340019, 247842, 6e-05), alg_cluster.Cluster(set(['51595']), 868.072034995, 313.157738101, 5665, 4.8e-05), alg_cluster.Cluster(set(['51510', '11001', '51013', '24033']), 868.773385157, 261.367545904, 1691310, 7.01566407105e-05), alg_cluster.Cluster(set(['51730', '51570', '51670']), 868.870650188, 299.725931421, 72991, 5.47692455234e-05), alg_cluster.Cluster(set(['24510', '24005']), 872.39640107, 248.277002427, 1405446, 6.70230005279e-05), alg_cluster.Cluster(set(['24003']), 874.299504257, 257.092978322, 489656, 5.3e-05), alg_cluster.Cluster(set(['24025']), 876.595690503, 242.900377968, 218590, 4.6e-05), alg_cluster.Cluster(set(['42011']), 878.575486588, 221.678319842, 373638, 4.6e-05), alg_cluster.Cluster(set(['51700', '51650']), 886.414381454, 300.23117705, 326587, 4.6e-05), alg_cluster.Cluster(set(['10003']), 888.26796027, 239.785084878, 500265, 4.9e-05), alg_cluster.Cluster(set(['51710']), 890.538449993, 303.826879654, 234403, 4.9e-05), alg_cluster.Cluster(set(['42045']), 890.848103047, 231.287395353, 550864, 5.2e-05), alg_cluster.Cluster(set(['42101']), 894.72914873, 227.900547575, 1517550, 5.8e-05), alg_cluster.Cluster(set(['34007']), 899.061431482, 232.054232622, 508932, 5.7e-05), alg_cluster.Cluster(set(['34021']), 900.837767215, 220.161475984, 350761, 4.6e-05), alg_cluster.Cluster(set(['36001']), 900.893220363, 164.489226174, 294565, 4.9e-05), alg_cluster.Cluster(set(['34005']), 903.696809122, 229.406192432, 423394, 4.6e-05), alg_cluster.Cluster(set(['34023']), 904.976453741, 215.001458637, 750162, 5.9e-05), alg_cluster.Cluster(set(['34003', '34031']), 906.566100671, 202.092249843, 1373167, 6.68631193438e-05), alg_cluster.Cluster(set(['34013', '36085', '34017', '34039']), 907.295090022, 208.589949594, 2368877, 7.63953219184e-05), alg_cluster.Cluster(set(['36083']), 907.985922231, 160.259081442, 152538, 4.7e-05), alg_cluster.Cluster(set(['36079']), 910.914101605, 190.332224, 95745, 4.8e-05), alg_cluster.Cluster(set(['36119', '36087']), 911.127770674, 196.82648364, 1210212, 6.12088890211e-05), alg_cluster.Cluster(set(['36081', '36047', '36005', '36061']), 912.16621305, 206.976723949, 7564550, 0.000108028558077), alg_cluster.Cluster(set(['09001']), 917.147792831, 191.892113077, 882567, 5.3e-05), alg_cluster.Cluster(set(['36059']), 917.384980291, 205.43647538, 1334544, 7.6e-05), alg_cluster.Cluster(set(['09005']), 917.693447363, 179.72354771, 182193, 4.8e-05), alg_cluster.Cluster(set(['25015']), 923.51496257, 165.065795331, 152251, 4.6e-05), alg_cluster.Cluster(set(['09009']), 924.915452791, 187.557375239, 824008, 5.4e-05), alg_cluster.Cluster(set(['25013']), 925.818389384, 169.274417202, 456228, 5.2e-05), alg_cluster.Cluster(set(['09003']), 925.917212741, 177.152290276, 857183, 5.7e-05), alg_cluster.Cluster(set(['36103']), 929.241649488, 199.278463003, 1419369, 6.3e-05), alg_cluster.Cluster(set(['09007']), 931.146412937, 184.643328414, 155071, 5.1e-05), alg_cluster.Cluster(set(['09013']), 932.609837236, 174.394154191, 136364, 5e-05), alg_cluster.Cluster(set(['33011']), 936.826960243, 147.991772374, 380841, 5e-05), alg_cluster.Cluster(set(['25017']), 943.405755498, 156.504310828, 1465396, 5.6e-05), alg_cluster.Cluster(set(['25021']), 948.811505542, 162.842169307, 650308, 5.3e-05), alg_cluster.Cluster(set(['25025']), 950.299079197, 158.007070966, 689807, 7e-05)]), (4.450794769626489, 148, 154), "\n\nOwlTest Test #27:  fast_closest_pair\n\n")


    # print "\n\n####################################################################"
    # print "\nTesting kmeans_clustering OWLTest ...\n"
    # print "\n\n####################################################################"
    # print "\n\n##################################################"
    # print "\n\t\t---- Test #28 ----"
    # print "\n\n\n##################################################\n"
    # suite.run_test(cpf.kmeans_clustering([alg_cluster.Cluster(set([]), 0, 1, 1, 0), alg_cluster.Cluster(set([]), 1, 0, 1, 0), alg_cluster.Cluster(set([]), 2, 4, 1, 0), alg_cluster.Cluster(set([]), 2, 3, 1, 0)], 2, 2), [alg_cluster.Cluster(set([]), 0, 0, 0, 0), alg_cluster.Cluster(set([]), 0, 0, 0, 0)], "\n\nOwlTest Test #28:  kmeans_clustering\n\n")
    
 	
	# [-6.3 pts] hierarchical_clustering(cluster list with 111 counties in singleton clusters omitted, 110)  returned cluster list missing a cluster with FIPS codes: set(['51087'])


    print "#########################################"
    print "\n\n\n\n##################################"
    suite.report_results()
    print "\n\n"

run_suite()